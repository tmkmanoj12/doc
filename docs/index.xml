<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Learn Website Manoj on Manoj Documentation</title>
    <link>/doc/</link>
    <description>Recent content in Learn Website Manoj on Manoj Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Dec 2018 11:08:42 +0530</lastBuildDate>
    
	<atom:link href="/doc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Collection_module</title>
      <link>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/collection_module/</link>
      <pubDate>Tue, 11 Dec 2018 11:08:42 +0530</pubDate>
      
      <guid>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/collection_module/</guid>
      <description>Counters  counter is actually a dictionary sub class which allows us to count hashable objects  from collections import Counter l = [1,2,2,1,3,4,5,5,3,3,45,6,7,1,2] Counter(l) #Counter({1: 3, 2: 3, 3: 3, 4: 1, 5: 2, 6: 1, 7: 1, 45: 1})  so the call to Counter method will count how many times each element exists so it returns a dictionary we can also count in a string  from collections import Counter s = &amp;#34;sssddjsjdhsjdhasjdhajsaasaasjdakfsijfhjkehfjkh&amp;#34; Counter(s)  Count how many times each word shows up in a sentence  from collections import Counter s = &amp;#34;How may times the word show up up manoj manoj&amp;#34; k = s.</description>
    </item>
    
    <item>
      <title>Numbers</title>
      <link>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/numbers/</link>
      <pubDate>Thu, 06 Dec 2018 12:51:16 +0530</pubDate>
      
      <guid>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/numbers/</guid>
      <description>Numbers  lot of types of numbers in python
 like integers : 1 ,3, 2 floating point numbers : 2.1, -1.23 , 4E2  In python 2, it does classic division means decimal points gets truncated off
  3/2 = 1  How can we make it do true division ,
 atleast make sure one is floating point number   3.0/2 = 1.5 3/2.0 = 1.</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/introduction/</link>
      <pubDate>Mon, 03 Dec 2018 19:34:33 +0530</pubDate>
      
      <guid>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/introduction/</guid>
      <description>Python Bootcamp Zero to Hero Udemy python2 vs python3  python 2
 python 2 was started in 2000 python 2.7 was released in mid 2010 will loose support for security updates in 2020  python 3
 released in 2008 more and more libraries are beginning to support but not all  which one to choose ??
 both they are very similar with key differences  Majority of people are using python 2.</description>
    </item>
    
    <item>
      <title>fats</title>
      <link>/doc/health/books/rujuthadiwekar/dont_looose_your_mind_loose_weight/about_fats/</link>
      <pubDate>Tue, 27 Nov 2018 02:24:39 +0000</pubDate>
      
      <guid>/doc/health/books/rujuthadiwekar/dont_looose_your_mind_loose_weight/about_fats/</guid>
      <description>fats play an important role in our body
  It helps us survive during periods of prolonged mental and physical stress,sickness ans prolonged starvation This is the only nutirent that can help us survive during toughest phases.  eat fat to loose fat
  Fat is dense substance providing us with 9 calories per gram  carbs and protiens provide only 4 calories per gram
  Other than survival , fats also do following functions in body</description>
    </item>
    
    <item>
      <title>Mike_dane_tut</title>
      <link>/doc/technical/general/hugo/mike_dane_tut/</link>
      <pubDate>Mon, 26 Nov 2018 08:45:31 +0000</pubDate>
      
      <guid>/doc/technical/general/hugo/mike_dane_tut/</guid>
      <description>Attachments   BachGavotteShort.mp3  (357 kB)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 kB)   adivorciarsetoca00cape.pdf  (361 kB)   hugo.png  (17 kB)   movieselectricsheep-flock-244-32500-2.mp4  (340 kB)   Installation
sudo apt-get install hugo Go to folder structure and do
hugo new site &amp;lt;project_name&amp;gt; A Bunch of folders will be created
Folder_Structure
 archetypes
 If we had a website and we want to assign a page a author or specify will language it is written.</description>
    </item>
    
    <item>
      <title>Strings</title>
      <link>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/strings/</link>
      <pubDate>Thu, 06 Dec 2018 07:25:29 +0000</pubDate>
      
      <guid>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/strings/</guid>
      <description>You can create by single quotes &#39;&#39; or double quotes &amp;quot;&amp;quot; It treates everything in a sentence as sequence Means &amp;ldquo;Manoj Kumar&amp;rdquo; every letter is a part of a sequence so that we can use indexing and slicing we can also have &amp;quot;Manoj last name is &#39;kumar&#39; &amp;quot; we can do the opposite &#39;Manoj last name is &amp;quot;kumar&amp;quot;&#39; we can display it using print statement eg : print &amp;quot;Manoj&amp;quot; we can ask for new line symbol as \n like that we can have different characters such as \t   python 2 vs python 3</description>
    </item>
    
    <item>
      <title>vitamins</title>
      <link>/doc/health/books/rujuthadiwekar/dont_looose_your_mind_loose_weight/about_vitamins/</link>
      <pubDate>Sat, 01 Dec 2018 03:02:05 +0000</pubDate>
      
      <guid>/doc/health/books/rujuthadiwekar/dont_looose_your_mind_loose_weight/about_vitamins/</guid>
      <description>All vitamins and minerals play an extremely important role in our body acting as catalysts , co-enzymes(help enzymes) and cofactors(these support chemical and metabolic reactions) of our metaboilc reations
  they dont provide body with any energy but they are important so that body can use that energy or calories well
 A high intake of processed food , stress and other lifestyle like smoking ,late nights and inactivity are increasing need of vitamins and minerals and reducing the ability to absorb them</description>
    </item>
    
    <item>
      <title>Statements</title>
      <link>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/statements/</link>
      <pubDate>Sat, 08 Dec 2018 08:22:18 +0000</pubDate>
      
      <guid>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/statements/</guid>
      <description>Other languages  if(a&amp;gt;b){ a = 2 b = 4 }   In python  if a&amp;gt;b : a = 2 b = 4  pyhton gets rid of () and {} and incorporates two things one colon(:) and a whitespace
 colon is used to end a statement and white space is ued to indent what happens in case of that statement has to be exceuted</description>
    </item>
    
    <item>
      <title>minerals</title>
      <link>/doc/health/books/rujuthadiwekar/dont_looose_your_mind_loose_weight/about_minerals/</link>
      <pubDate>Thu, 06 Dec 2018 21:06:37 +0530</pubDate>
      
      <guid>/doc/health/books/rujuthadiwekar/dont_looose_your_mind_loose_weight/about_minerals/</guid>
      <description>Calcium  Found in  dairy products tofu green leafy vegetables nuts seeds almost all wholesome food (oranic grown foods)  We need it because  it maintains health of bones , joints and twentieth is responsible for all muscualr contractions clotting of blood and to regulate blood pressure  Take it as supplement daily Bone is a dynamic living tissue in the body  being broken down and rebuilt every day even in adults  calicium is essential for maintaining good bone health on daily basis A diet that is high in processed foods , caffeine , alcohol, sugar and sodium reduces calcium absorption , So does regulat intakes of antacids and laxatives this mineral we need to supplement through ou diet If you are using a calcium supplement check what compound it uses  A calcium citrate or lactate(soluble in form) compound is absorbed much better by the human body than the popular calcium carbonate or phosphate supplements  Use a supplement od 1000 milligrams a day for optimum health  Iron  Found In  Meat Fish Eggs (All non veg sources) Veg Sources garden cress seeds(traditionally used to make laddoos for pregnent and nursing women) bajra jowar whole grains fresh vegetables and fruits  For Iron to be absorbed effectively , we need adequate amounts of vitamin C and B(expecially B12) in our body We need it because  it is a part of heamoglobin which transports oxygen from lungs to different tissues of the body and carbondioxide from different tissues of the body to lungs  Dont take iron supplements Just like in case of calcium , processed foods , caffeine , anti depressants, sodium ,sugar (includinf desserts , mithai and chocolates that we eat because of PMS) reduce the absorption of iron in the body the best strategy to improve iron intake is not to take iron supplememts , but instead crate an environment in the body which will encourage iron absorption.</description>
    </item>
    
    <item>
      <title>Print_format</title>
      <link>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/print_format/</link>
      <pubDate>Thu, 06 Dec 2018 15:39:07 +0530</pubDate>
      
      <guid>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/print_format/</guid>
      <description>python 2  print statement is used to print the strings - Print a string
print &amp;#34;Manoj Kumar&amp;#34;  Print a string vaiable along with a string  a= &amp;#34;manoj&amp;#34; print &amp;#34;My name is %s&amp;#34; %(a)  Print a floating point variable  a= 1.233 print &amp;#34;My name is %1.2f&amp;#34; %(a)  In 1.2f 2 is how many numbers to show past the decimal if you make 2 as 10 it will fill rest of absent decimals with 0 1 is the total number of minimum digits that string should contain Suppose if you make 1 to 10 it will fill rest of the spaces with whitespaces  a= 1.</description>
    </item>
    
    <item>
      <title>Functions</title>
      <link>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/functions_methods/</link>
      <pubDate>Sat, 08 Dec 2018 16:00:37 +0530</pubDate>
      
      <guid>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/functions_methods/</guid>
      <description>Methods are fucntions built into objects  Functions  Useful device that groups together a set of statements so that they can be run more than once they also let us specify input parameters that can serve as inputs to functions Function allows us not repeat the code again and again def is a keyword to tell python we are about to create a function Naming rules are same as naming rules of variable  def add(): &amp;#34;&amp;#34;&amp;#34; This is a muliline coment &amp;#34;&amp;#34;&amp;#34; return &amp;#34;manoj&amp;#34;  so this multi line comment acts as a docstring when you run help on the method , that means it serves as a documention for function Write a function which tells whether the number is prime or not  def isPrime(num): for item in range(2,num): if num%item ==0: print &amp;#34;Not a Prime&amp;#34; break else : print &amp;#34;Prime&amp;#34;  Better method  import math def is_prime(num): &amp;#39;&amp;#39;&amp;#39; Better method of checking for primes.</description>
    </item>
    
    <item>
      <title>Lists</title>
      <link>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/lists/</link>
      <pubDate>Thu, 06 Dec 2018 17:07:15 +0530</pubDate>
      
      <guid>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/lists/</guid>
      <description>Strings are types of sequence in python lists are more generalised version of sequence lists are constructed with sqaure brackets and each element is seperated with commas  my_list = [1,2,3]  this is a list of integers lists can hold a different kind of object TypeScript  my_list = [1,&amp;#34;string&amp;#34;,3.341] ##Functions
 just like strings they have a length Length of a list  len([1,&amp;#34;string&amp;#34;,3.341])  Indexing and Slicing a = [&amp;#34;one&amp;#34;,1,2,3] a[1] #output 1 a[1:] # take everything from index - 1 a[:3] # take everything upto index - 3 (excluding 3)  You can concatenate lists like strings  [1,2,3]+[&amp;#34;one&amp;#34;,&amp;#34;two&amp;#34;,&amp;#34;three&amp;#34;]  You can repeat the lists using muliplication just like strings  ([1,2,3]+[&amp;#34;one&amp;#34;,&amp;#34;two&amp;#34;,&amp;#34;three&amp;#34;])*2  list can grow as long as we want they have no type constraint  Methods  append  [1,2,3].</description>
    </item>
    
    <item>
      <title>Scope</title>
      <link>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/scope/</link>
      <pubDate>Sun, 09 Dec 2018 10:22:12 +0000</pubDate>
      
      <guid>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/scope/</guid>
      <description>How python deals with variable names when create a variable in python the variable name is stored in namespace variable names also have a scope This scope of a variable name decides the visibility of the variable to the other parts of code  x = 50 def dummy(): x =25 return x print x # will print 50 print dummy # will print 25  so we have two different x so how does python know what x to refer to in each statement this is where scope comes(rules)  Rules  Name Assignments will create or change local names by default Name references search at most 4 scopes</description>
    </item>
    
    <item>
      <title>Dictionaries</title>
      <link>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/dictionaries/</link>
      <pubDate>Fri, 07 Dec 2018 22:11:33 +0530</pubDate>
      
      <guid>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/dictionaries/</guid>
      <description>they are mappings in python we can think of it as hash tables or objects in JS in other languages
 Mappings are collection of objects that are sorted by a key unlike sequence that stores obejcts by relative sequence
 we can access an element in list by indexing
 what mapping is doing is its gonna start objects with key
 mappings are not gonna retain order</description>
    </item>
    
    <item>
      <title>Oops</title>
      <link>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/oops/</link>
      <pubDate>Sun, 09 Dec 2018 10:53:15 +0000</pubDate>
      
      <guid>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/oops/</guid>
      <description>list is an object (everything is an object in python) we can have methods on list  l = [1,2,3] l.count() #3  we can use type() to check the typeof object  l = [1,2,3] a = 2 b = &amp;#34;manoj&amp;#34; tup = (1,2,3) d = {&amp;#34;k1&amp;#34;:1} lamb = lambda x: x**2 def func(): pass type(a) # int type(b) # str type(tup) # tuple type(d) # dict type(l) # list type(lamb) # function means object of type function type(func) # function  how can we create our own object types thats why we use class keyword  class  we can own object types using class keyword class is like blueprint that defines nature of the objects created with it from this classes we can construct instances an instance is a specific object created for a particular class</description>
    </item>
    
    <item>
      <title>Tuples</title>
      <link>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/tuples/</link>
      <pubDate>Fri, 07 Dec 2018 22:36:10 +0530</pubDate>
      
      <guid>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/tuples/</guid>
      <description>they are very similar to lists except they are immutable
 You can construct a tuple using paranthesis with elements seperated by commas
  a = (1,2,3) len(a) #3  we can same methods as lists on tuples tuples can have different object types A tuple is a sequence like a sequence  a = (1,2,3) len(a) #3 a[-2] # 2 Methods - only 2 methods  if we want an index of element a.</description>
    </item>
    
    <item>
      <title>Exception_handling</title>
      <link>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/exception_handling/</link>
      <pubDate>Sun, 09 Dec 2018 12:48:05 +0000</pubDate>
      
      <guid>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/exception_handling/</guid>
      <description>For eg : syntax errors it is a specfic description of types of error Even statement is syntactically correct , while exceuting it may cause error just like try catch in other languages here our syntax is try , except , finally  try : do something except Exception1 : exceute this except Exception2 : exceute this else : if there is no exception exceute this finally : exceute afte reverything is done   Built In Exceptions  try: a = open(&amp;#34;test1.</description>
    </item>
    
    <item>
      <title>Files</title>
      <link>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/files/</link>
      <pubDate>Fri, 07 Dec 2018 22:44:52 +0530</pubDate>
      
      <guid>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/files/</guid>
      <description>Interacting with external files we will handle .txt files of we want to handle .docx , .xlsx
 we can open a file using open(&amp;lsquo;path&amp;rsquo;)
 we can read the file by a.read()
a = open(&amp;#39;test.txt)a.read() if you do a read again you will get an empty string , because it read the entire file and put the cursor at the end of file
 so we have to reset the cursor , to do that we can have a.</description>
    </item>
    
    <item>
      <title>Modules</title>
      <link>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/modules/</link>
      <pubDate>Sun, 09 Dec 2018 19:04:02 +0530</pubDate>
      
      <guid>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/modules/</guid>
      <description> if we want to import a module  import module_name   import math math.sqrt(4)  all math related functionalities are in math module  from math import sqrt # instead of importing everything import only specific sqrt(4)  all import statements should be top of your code what if we want to download exteral module anaconda already did that for us if we still want  conda install *module name*conda install flask  what if anaconda doesnot have that package we can use pip python management sysytem which allows us to install packages from Internet  </description>
    </item>
    
    <item>
      <title>Sets_booleans</title>
      <link>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/sets_booleans/</link>
      <pubDate>Fri, 07 Dec 2018 23:11:17 +0530</pubDate>
      
      <guid>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/sets_booleans/</guid>
      <description>sets are the unordered collection of the unique elements you can construct a set using set() it will look like a dictionary with no values but it is not python a = set() a.add(1) a.add(2) a.add(2) # there will be no change  we can convert a list with duplicate elements to unique using set()  l = [1,1,1,1,1,1,1,3,3,3,3,3,5,5,5,45,5,4] l = set(l) print(l) # will give set(1, 3, 4, 5, 45) in sorted order  sets are only concerned with unique elements  Booleans  they are true or false we can create using comaprision operaters 1&amp;gt;2 we can have None to an object that we dont have to reassign it yet  a = None print(a) Comparision operators We have same common comaprison oprators as other languages</description>
    </item>
    
    <item>
      <title>Bulitin_functions</title>
      <link>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/bulitin_functions/</link>
      <pubDate>Sun, 09 Dec 2018 21:47:56 +0530</pubDate>
      
      <guid>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/bulitin_functions/</guid>
      <description>Map  it takes two arguments  function sequence  map will run the given function against each element in sequence  def convertTemp(temp): return ((temp)*9/5.0) + 32 l = [10,20,30] map(convertTemp,l)  this is just like map in JS
 we can pass lambda expressions also
  map(lambda x: x*(9/5.0)+32),[10,20,30,40])a = [1,2,3] b = [4,5,6] c = [7,8,9] map(lambda x,y: x+y,a,b)  the main thing is it will take 0th index in a and 0th index of b and apply lambda function and again it will take 1st index of a and 1st index of b and aply lambda function</description>
    </item>
    
    <item>
      <title>Decorators</title>
      <link>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/decorators/</link>
      <pubDate>Mon, 10 Dec 2018 20:47:26 +0530</pubDate>
      
      <guid>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/decorators/</guid>
      <description>decorators can be thought as functions which modify the functionality of a function  we can get globals and locals anywhere by calling globals() and locals() those objects will comes as dictionary we can get the keys of them by globals().keys()   print globals().keys()def func(): print locals() # {} beacuse there are no locals return 1 print func() #1  in python each fuction will have its sperate namespace means scope  def hello(name = &amp;#34;manoj&amp;#34;): print &amp;#39;Hello &amp;#39; + name hello() # Hello manoj # since everything is an object in python we can assign funtions to variables greet = hello greet() # Hello manoj del hello # what if i delete hello now  # will hello work ?</description>
    </item>
    
    <item>
      <title>Iterators_generators</title>
      <link>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/iterators_generators/</link>
      <pubDate>Mon, 10 Dec 2018 15:51:26 +0000</pubDate>
      
      <guid>/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/iterators_generators/</guid>
      <description>generator function allows us to write a function that can send back the value and then later resume to pickup where it left off this type of function in python is a generator allowing us to generate a sequence of values over time main difference in syntax will be the use of yield statement generator functin will look like an normal function but the main difference is when a generator function is compiled they become the object that support an iteration protocol that means when they are called in your code they dont actually return a value and exit generator functions will automatically suspend and resume excecution and state around the last point of value generation the main advantage is instead of having to compute an entire series of values upfront , generator functions can be suspended, this is called state suspension  Why use generators  they useful for calculating large sets of results(particularly that involve calculations in the loops themselves) , where we dont want to allocate the memory yfor all the results at the same time</description>
    </item>
    
  </channel>
</rss>