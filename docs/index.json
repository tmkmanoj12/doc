[
{
	"uri": "/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/numbers/",
	"title": "Numbers",
	"tags": [],
	"description": "",
	"content": " Numbers  lot of types of numbers in python\n like integers : 1 ,3, 2 floating point numbers : 2.1, -1.23 , 4E2  In python 2, it does classic division means decimal points gets truncated off\n  3/2 = 1  How can we make it do true division ,\n atleast make sure one is floating point number   3.0/2 = 1.5 3/2.0 = 1.5  Cast of them to float\nfloat(3)/2 = 1.5 In python 3 - it does true division\n  3/2 = 1  we can import some capabilities from python 3 to 2 using *future*module  from __future__ import division  for finding power  2**3 =8  order of operation is BODMAS what if you want to specify order you can use order  (2+3)*(10+4)  assigning labels to objects to create variables , a=5\n The names you use when creating these labels need to follow a few rules:\n Names can not start with a number. There can be no spaces in the name, use _ instead. Can\u0026rsquo;t use any of these symbols :\u0026lsquo;\u0026ldquo;,\u0026lt;\u0026gt;/?|()!@#$%^\u0026amp;*~-+ It\u0026rsquo;s considered best practice (PEP8) that the names are lowercase.   "
},
{
	"uri": "/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/introduction/",
	"title": "Introduction",
	"tags": [],
	"description": "",
	"content": " Python Bootcamp Zero to Hero Udemy python2 vs python3  python 2\n python 2 was started in 2000 python 2.7 was released in mid 2010 will loose support for security updates in 2020  python 3\n released in 2008 more and more libraries are beginning to support but not all  which one to choose ??\n both they are very similar with key differences  Majority of people are using python 2.7\n if you want to a opportunity in python you will likely be doing in 2.7\n  Installation  Easiest way to install python and jupyter notebooks is using anaconda  Editors  wingware ide by jet brains(pycharm) komodo text editor spyder (similar to matlab)  Jupyter note books  You can run python code in bowser made up of cells cell is where you can input code and run it shift + enter will run a cell if cell is running a long time you can interrupt the kernel you can insert , cut ,copy a cell we have options of rull all above and run all below kernel (the code thats runinng) it will support intellisense of methods like methods on array - (click tab) shift + tab will make an expanded view of intellisense if you want any help you call help() method eg : help(\u0026lt;variablename\u0026gt;) you can change cells to markdown cells , they are like Markdown text for comments use # larger multiline comments  \u0026#39;\u0026#39;\u0026#39; larger multiline string \u0026#39;\u0026#39;\u0026#39; Resources  Author notebok repo\n Author python bootcamp notebook\n use stack overflow for learning\n python docs\n  "
},
{
	"uri": "/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/",
	"title": "Bootcamp_zero_to_hero",
	"tags": [],
	"description": "",
	"content": "  Introduction Python Bootcamp Zero to Hero Udemy python2 vs python3 python 2 python 2 was started in 2000 python 2.7 was released in mid 2010 will loose support for security updates in 2020 python 3 released in 2008 more and more libraries are beginning to support but not all which one to choose ?? both they are very similar with key differences Majority of people are using python 2.\n  Objects_ds_basics Numbers Numbers lot of types of numbers in python like integers : 1 ,3, 2 floating point numbers : 2.1, -1.23 , 4E2 In python 2, it does classic division means decimal points gets truncated off 3/2 = 1 How can we make it do true division , atleast make sure one is floating point number 3.0/2 = 1.5 3/2.0 = 1. Strings You can create by single quotes '' or double quotes \u0026quot;\u0026quot; It treates everything in a sentence as sequence Means \u0026ldquo;Manoj Kumar\u0026rdquo; every letter is a part of a sequence so that we can use indexing and slicing we can also have \u0026quot;Manoj last name is 'kumar' \u0026quot; we can do the opposite 'Manoj last name is \u0026quot;kumar\u0026quot;' we can display it using print statement eg : print \u0026quot;Manoj\u0026quot; we can ask for new line symbol as \\n like that we can have different characters such as \\t python 2 vs python 3\n  Statements Other languages if(a\u0026gt;b){ a = 2 b = 4 } In python if a\u0026gt;b : a = 2 b = 4 pyhton gets rid of () and {} and incorporates two things one colon(:) and a whitespace colon is used to end a statement and white space is ued to indent what happens in case of that statement has to be exceuted\n  Functions Methods are fucntions built into objects Functions Useful device that groups together a set of statements so that they can be run more than once they also let us specify input parameters that can serve as inputs to functions Function allows us not repeat the code again and again def is a keyword to tell python we are about to create a function Naming rules are same as naming rules of variable def add(): \u0026#34;\u0026#34;\u0026#34; This is a muliline coment \u0026#34;\u0026#34;\u0026#34; return \u0026#34;manoj\u0026#34; so this multi line comment acts as a docstring when you run help on the method , that means it serves as a documention for function Write a function which tells whether the number is prime or not def isPrime(num): for item in range(2,num): if num%item ==0: print \u0026#34;Not a Prime\u0026#34; break else : print \u0026#34;Prime\u0026#34; Better method import math def is_prime(num): \u0026#39;\u0026#39;\u0026#39; Better method of checking for primes.\n  Scope How python deals with variable names when create a variable in python the variable name is stored in namespace variable names also have a scope This scope of a variable name decides the visibility of the variable to the other parts of code x = 50 def dummy(): x =25 return x print x # will print 50 print dummy # will print 25 so we have two different x so how does python know what x to refer to in each statement this is where scope comes(rules) Rules Name Assignments will create or change local names by default Name references search at most 4 scopes\n  Oops list is an object (everything is an object in python) we can have methods on list l = [1,2,3] l.count() #3 we can use type() to check the typeof object l = [1,2,3] a = 2 b = \u0026#34;manoj\u0026#34; tup = (1,2,3) d = {\u0026#34;k1\u0026#34;:1} lamb = lambda x: x**2 def func(): pass type(a) # int type(b) # str type(tup) # tuple type(d) # dict type(l) # list type(lamb) # function means object of type function type(func) # function how can we create our own object types thats why we use class keyword class we can own object types using class keyword class is like blueprint that defines nature of the objects created with it from this classes we can construct instances an instance is a specific object created for a particular class\n  Exception_handling For eg : syntax errors it is a specfic description of types of error Even statement is syntactically correct , while exceuting it may cause error just like try catch in other languages here our syntax is try , except , finally try : do something except Exception1 : exceute this except Exception2 : exceute this else : if there is no exception exceute this finally : exceute afte reverything is done Built In Exceptions try: a = open(\u0026#34;test1.\n  Modules  if we want to import a module import module_name import math math.sqrt(4) all math related functionalities are in math module from math import sqrt # instead of importing everything import only specific sqrt(4) all import statements should be top of your code what if we want to download exteral module anaconda already did that for us if we still want conda install *module name*conda install flask what if anaconda doesnot have that package we can use pip python management sysytem which allows us to install packages from Internet   Bulitin_functions Map it takes two arguments function sequence map will run the given function against each element in sequence def convertTemp(temp): return ((temp)*9/5.0) + 32 l = [10,20,30] map(convertTemp,l) this is just like map in JS we can pass lambda expressions also map(lambda x: x*(9/5.0)+32),[10,20,30,40])a = [1,2,3] b = [4,5,6] c = [7,8,9] map(lambda x,y: x+y,a,b) the main thing is it will take 0th index in a and 0th index of b and apply lambda function and again it will take 1st index of a and 1st index of b and aply lambda function\n  Decorators decorators can be thought as functions which modify the functionality of a function we can get globals and locals anywhere by calling globals() and locals() those objects will comes as dictionary we can get the keys of them by globals().keys() print globals().keys()def func(): print locals() # {} beacuse there are no locals return 1 print func() #1 in python each fuction will have its sperate namespace means scope def hello(name = \u0026#34;manoj\u0026#34;): print \u0026#39;Hello \u0026#39; + name hello() # Hello manoj # since everything is an object in python we can assign funtions to variables greet = hello greet() # Hello manoj del hello # what if i delete hello now # will hello work ?\n  Iterators_generators generator function allows us to write a function that can send back the value and then later resume to pickup where it left off this type of function in python is a generator allowing us to generate a sequence of values over time main difference in syntax will be the use of yield statement generator functin will look like an normal function but the main difference is when a generator function is compiled they become the object that support an iteration protocol that means when they are called in your code they dont actually return a value and exit generator functions will automatically suspend and resume excecution and state around the last point of value generation the main advantage is instead of having to compute an entire series of values upfront , generator functions can be suspended, this is called state suspension Why use generators they useful for calculating large sets of results(particularly that involve calculations in the loops themselves) , where we dont want to allocate the memory yfor all the results at the same time\n  Collection_module Counters counter is actually a dictionary sub class which allows us to count hashable objects from collections import Counter l = [1,2,2,1,3,4,5,5,3,3,45,6,7,1,2] Counter(l) #Counter({1: 3, 2: 3, 3: 3, 4: 1, 5: 2, 6: 1, 7: 1, 45: 1}) so the call to Counter method will count how many times each element exists so it returns a dictionary we can also count in a string from collections import Counter s = \u0026#34;sssddjsjdhsjdhasjdhajsaasaasjdakfsijfhjkehfjkh\u0026#34; Counter(s) Count how many times each word shows up in a sentence from collections import Counter s = \u0026#34;How may times the word show up up manoj manoj\u0026#34; k = s.\n  "
},
{
	"uri": "/doc/health/books/rujuthadiwekar/dont_looose_your_mind_loose_weight/about_fats/",
	"title": "fats",
	"tags": [],
	"description": "",
	"content": "  fats play an important role in our body\n  It helps us survive during periods of prolonged mental and physical stress,sickness ans prolonged starvation This is the only nutirent that can help us survive during toughest phases.  eat fat to loose fat\n  Fat is dense substance providing us with 9 calories per gram  carbs and protiens provide only 4 calories per gram\n  Other than survival , fats also do following functions in body\n Transports Vitamin K,E,D,A which are also called fat soluble vitamins Protects vital organs like heart, kidney ,lungs, liver etc Acts as insultaor and protects body from loss of heat Is a part of protective shealth covering the nervs and helps in nerve transmission Stimulates flow of bile and emptying gall bladder Required for milk production and healthy growth of baby in women Makes up of much of brain and helps it function smoothly lubricates joints   60 % of Brain is composed of fat\n fats are divided into :\nmermaid.initialize({startOnLoad:true}); graph TD; A[FATS]--B[Saturated] ! A--C[Unsaturared] C--D[Mono Unsaturated Fatty Acids] C--E[Poly Unsaturated Fatty Acids] C--F[TransFats]  Saturated Fats  They are solid @room temperature\n butter animal fats(espicially red meat) milk and milk products coconut oil palm oil  long chain fatty acids are found in animal fats\n  long chain fatty acids damage cardiovascular health and are hard to digest\n  As a general rule , fats in animal fats are tough on body while the ones from dairy products are easily absorbed  Ghee - clarified butter obtained after milk is taken through a process of curdling , heating or clarifiying and has short chain fatty acids which are easy to digest\n Anti-Ageing  to keep face and body from ageing  work at keeping body weight to minimum to want a young face you have to reduce gravitational force acting upon it the one which you maintain from 18-25  You have to include healthy fats in diet like  nuts (including peanuts) cheese ghee paneer fish  by adding healthy fats  your face gets the moisture and pervent wrinkling burn fat effecltively   Unsaturaed Fats  liquid @room temperature  all oils except coconut oil  just like proteins have IAA , which cannot be synthesized by body and needed by diet Fats also has EFA(Essential Fatty Acids) , we have to give them through diet  Mono Unsaturated Fatty Acids  Found in  Almonds peanuts olives avacados  They are crucial in maintaining the health of heart Oleic acid (component of MUFA) is great for moisturing skin and to keep glowing it some hair growth vitamins are made with it  Poly saturated fatty acids mermaid.initialize({startOnLoad:true}); graph TD; A[PUFA]--B[Omega 3] A--C[Omega 6]  omega 6  found in  sunflower safflower soy bean oils Most vegetable oils are PUFA   omega 3  found in\n flax seed wallnuts fish oils  PUFA Has Heart protecting values too\n we should have equa amounts of omega 6 and 3\n but in today diets it is 20:1 (omeage 6:omega 3) ,which can lead to hardeining of arteries and increase in cardiovasular diseases\n  Trans Fats  This was new kind of fat which was created to preserve food and give it texture It is made by coverting unsaturated fats to saturated fats , by a process called hydrogenation They are commonly used by  restaurats fast foos centres food that is prosuced in large scale for commercial purposes as it is cheaper  Most of the bought foods such as  processed foods store cakes bisuits pizza burgers fries  They all contain bas fats as it increases the level of low density protein lipo protein or bad cholestrol , Avoid it  Trans fats are responsible for hardening of arteries , increasing the body fat and causing many other health problems , obesity related conditions like insulin insensitivity , heart trouble , BP , joint aches\n  When you dont provide your body with essential fatty acids , we experience stress and body reacts by storing more fat it is not mistake of body it is activating the survival mode and protecting you from any harm that comes with stress, preventing fat burning and try to improve chances as survival and lowering your metaboilc rate Avoid anything that has low fat word in it , eg :low fat biscuts invisible fat - all processed foods has invisible fats when you see oil , you say okay! i there is so much oil i have to eat less  How to eat fat  for lean , toned body , healthy heart and good skin and hair , make fat part of atleat three meals include cheese nuts and other dairy products fats when mixed with carbs and proteins they reduce the gyclemic index of them by slowly releasing sugaer in the blood this leads to effective fat burning ,stable blood sugar and minimised hunger fats alose reduce mood swings and depression Dont eat reused oil products soda and salt mixing is not a good ideal leading to excess gas and bloating One teaspoon of homemade ghee a day  Cooking ware  Using Iron tawa , kadhai is a good way to increase the iron content of body same with stainless steel and glass Using alluminium is bad as it enters the body and neutalizes the digestive enzymes and increases the risk of ulcers and if present in excess amounts will even lead to alzheimers     Fats - never eat How to cheat     Fats from red and processed meat Eat as first meal or post-workout meal , only once a week, Never combime high GI food with meat like rice and meat , biryani   Fats in deep fried foods pakors ,samosas,bujia etc - all snacks - Eat first thing in morning half your fist meal and have along with this , or have a meal by itself in the afternoon , restrict to only one , donot eat mithai with a snack , avoid foods at large parties as they are deep fried twice   Mithais especially those made of nuts eat as mealby itself , have it 1\u0026frasl;2 hour before or after lunch , dont mix it with the meal   biscuits eat after doing a long physical activity like trekking 2 hours of shopping , restrict to once a week   cakes \u0026amp; pastries have first thing in morninig , once or twice a month   pizza only one slice as a meal by itself    To Eat    Fats - to Eat Fats taken after excersice or stressful activity     nuts , avacadoes , olives , milk and milk products - cheese , paneer , ghee , yogurt, coconut , flax seeds , fish , cooking oil, (Eating)\u0026ndash;If ghee or oil as a dressing , \u0026ndash; others as a meal, make sure you have 2-3 varities once a day , if you are feeling dull after a full or craving sugar just take a omeag 3 rich supplement like flax seed , fish oil if we have trouble loosing body fat take flax seed and omega 3 supplement \u0026ndash; Eat within 10 minutes of workout    "
},
{
	"uri": "/doc/health/books/rujuthadiwekar/dont_looose_your_mind_loose_weight/",
	"title": "weight_loss",
	"tags": [],
	"description": "",
	"content": "  fats fats play an important role in our body It helps us survive during periods of prolonged mental and physical stress,sickness ans prolonged starvation This is the only nutirent that can help us survive during toughest phases. eat fat to loose fat Fat is dense substance providing us with 9 calories per gram carbs and protiens provide only 4 calories per gram Other than survival , fats also do following functions in body\n  vitamins All vitamins and minerals play an extremely important role in our body acting as catalysts , co-enzymes(help enzymes) and cofactors(these support chemical and metabolic reactions) of our metaboilc reations they dont provide body with any energy but they are important so that body can use that energy or calories well A high intake of processed food , stress and other lifestyle like smoking ,late nights and inactivity are increasing need of vitamins and minerals and reducing the ability to absorb them\n  minerals Calcium Found in dairy products tofu green leafy vegetables nuts seeds almost all wholesome food (oranic grown foods) We need it because it maintains health of bones , joints and twentieth is responsible for all muscualr contractions clotting of blood and to regulate blood pressure Take it as supplement daily Bone is a dynamic living tissue in the body being broken down and rebuilt every day even in adults calicium is essential for maintaining good bone health on daily basis A diet that is high in processed foods , caffeine , alcohol, sugar and sodium reduces calcium absorption , So does regulat intakes of antacids and laxatives this mineral we need to supplement through ou diet If you are using a calcium supplement check what compound it uses A calcium citrate or lactate(soluble in form) compound is absorbed much better by the human body than the popular calcium carbonate or phosphate supplements Use a supplement od 1000 milligrams a day for optimum health Iron Found In Meat Fish Eggs (All non veg sources) Veg Sources garden cress seeds(traditionally used to make laddoos for pregnent and nursing women) bajra jowar whole grains fresh vegetables and fruits For Iron to be absorbed effectively , we need adequate amounts of vitamin C and B(expecially B12) in our body We need it because it is a part of heamoglobin which transports oxygen from lungs to different tissues of the body and carbondioxide from different tissues of the body to lungs Dont take iron supplements Just like in case of calcium , processed foods , caffeine , anti depressants, sodium ,sugar (includinf desserts , mithai and chocolates that we eat because of PMS) reduce the absorption of iron in the body the best strategy to improve iron intake is not to take iron supplememts , but instead crate an environment in the body which will encourage iron absorption.\n  "
},
{
	"uri": "/doc/health/books/rujuthadiwekar/",
	"title": "Rujuthadiwekar",
	"tags": [],
	"description": "",
	"content": "  weight_loss   "
},
{
	"uri": "/doc/technical/languages/javascript/books/",
	"title": "Books",
	"tags": [],
	"description": "",
	"content": "  "
},
{
	"uri": "/doc/technical/languages/angular/books/",
	"title": "Books",
	"tags": [],
	"description": "",
	"content": "  "
},
{
	"uri": "/doc/technical/languages/nodejs/books/",
	"title": "Books",
	"tags": [],
	"description": "",
	"content": "  "
},
{
	"uri": "/doc/technical/languages/python/tutorials/",
	"title": "Tutorials",
	"tags": [],
	"description": "",
	"content": "  Bootcamp_zero_to_hero Introduction Python Bootcamp Zero to Hero Udemy python2 vs python3 python 2 python 2 was started in 2000 python 2.7 was released in mid 2010 will loose support for security updates in 2020 python 3 released in 2008 more and more libraries are beginning to support but not all which one to choose ?? both they are very similar with key differences Majority of people are using python 2.\n  "
},
{
	"uri": "/doc/technical/general/hugo/mike_dane_tut/",
	"title": "Mike_dane_tut",
	"tags": [],
	"description": "",
	"content": "   Attachments   BachGavotteShort.mp3  (357 kB)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 kB)   adivorciarsetoca00cape.pdf  (361 kB)   hugo.png  (17 kB)   movieselectricsheep-flock-244-32500-2.mp4  (340 kB)   Installation\nsudo apt-get install hugo Go to folder structure and do\nhugo new site \u0026lt;project_name\u0026gt; A Bunch of folders will be created\nFolder_Structure\n archetypes\n If we had a website and we want to assign a page a author or specify will language it is written. Hugo lets you to add those kind of data i.e meatadata(data about data), so this metadata sits in archetypes folder  content\n content of website goes here  data\n Acts as databse for website like having JSON files nd pulling data from it  layouts - You can define complex layouts in a hugo - like same header and footer in all pages in webiste , like writing a header.html and footer.html\n static\n this is where you store static assets - like css , js , images  themes\n we can download prebuit themes  config.toml\n these are the settings of the website You can define\n title of webiste\n what language it is written in\n base URL\n   About Themes\n If you want to download themes from hugo website just copy the repo URL and clone it in themes directory and then modfiy the .toml file  About Content\n You can add markdown files in content using  hugo new manoj.md  you can add subdirectories also and add content files\n Each folder should have _index.md because it would the home page for list\n  Starting Server\nhugo server -D  This D Option is for telling the server to include the draft files too otherwise we cant see the working files coz when we create content files it will set draft = true by default  Content Organization\n when you go the server you will see all the content files listed and when you click the route changes Hugo defines two seperate types of content(breakdowns all the content of the website into two types)\n single pages\n to serve only particular content\n list pages\n eg : Home page , to list other pages\n  When you are doing just breakdown content into list pages and single pages\n  Front Matter in Hugo\n It is the metadata (data about our content files) Generally we store them in key value pairs can be written in\n YAML TOML JSON - Default   ArcheTypes\n when we create a new content file we will get some front matter , how will it be created ?(using archetypes)\n in archetypes there is default.md folder\n That will be taken as reference for front matter - for all new files\n we can have different archetypes for different for different files\n Just you have to give the containing dir name in archetype folder\n If it cant find the container folder it will take from default files\n  Short Code\n If you want to add a video to your content instead of adding a lengthy html we can have snippets called short codes we can define our own short codes for eg : to embedd a youtube video \u0026quot;{{ \u0026lt;youtube qtIqKaDlqXo\u0026gt;}}\u0026quot;\n \u0026ldquo;Please remove space between bracker and youtube\u0026rdquo;\n   Taxonomies\n How we logically group our content together 2 types\n tags\n Suppose if we want to tag different blogs with different key words\n when you click on tags hufo automatically creates a page with tag in the route\n when you create a new taxonomies you have to decalre the default tags and categores along with cusotm\n Eg :\n  [taxonomies] tag = \u0026#34;tags\u0026#34; category = \u0026#34;categories\u0026#34; mood = \u0026#34;moods\u0026#34; singular = plural syntax\n categories\n Group different pieces of content with different categories\n  when you change config.toml you have to restart the hugo server\n  Templates\n piece of html which is same on every page for eg : menu bar html is a template allow you to overall html skeleton and you can inject specific content we can have a template for list pages and single pages  listTemplates  means template for list file use we can create in layouts folder with _default folder and list.html which is a page used to render  #### Hugo variable\n {{.Content}} which wll display the index content\nHugo Function In order to loop\n{{range .Pages}} {{.Title}} {{end}}  means i want to range over pages and display title\n{{range .Pages}} {{.URL}} {{end}}   -means range over pages and display the route\nSingleTemplates  means They are single page content we can create in layouts folder with _default folder and single.html which is a page used to render we can access default front matter variables {{.Title}} or {{.Date}}  Home Page Template  we can create in layouts folder with index.html file  ### Section Templates\n we can create in layouts folder with content sub folders\ngist     "
},
{
	"uri": "/doc/health/books/",
	"title": "Books",
	"tags": [],
	"description": "",
	"content": "  Rujuthadiwekar   "
},
{
	"uri": "/doc/technical/core/",
	"title": "Core",
	"tags": [],
	"description": "",
	"content": "  "
},
{
	"uri": "/doc/technical/tools/git/",
	"title": "Git",
	"tags": [],
	"description": "",
	"content": "  "
},
{
	"uri": "/doc/technical/general/hugo/",
	"title": "Hugo",
	"tags": [],
	"description": "",
	"content": "  Mike_dane_tut   "
},
{
	"uri": "/doc/technical/languages/javascript/",
	"title": "Javascript",
	"tags": [],
	"description": "",
	"content": "  Books   Tutorials   "
},
{
	"uri": "/doc/technical/",
	"title": "Technical",
	"tags": [],
	"description": "",
	"content": " Here you can find Technical Stuff  core - Realted to core computer science languages - Computer Languages web-domain - Related to Suff in Web Domain tools - Tools which are used daily like git general - Genral stuff  "
},
{
	"uri": "/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/strings/",
	"title": "Strings",
	"tags": [],
	"description": "",
	"content": "  You can create by single quotes '' or double quotes \u0026quot;\u0026quot; It treates everything in a sentence as sequence Means \u0026ldquo;Manoj Kumar\u0026rdquo; every letter is a part of a sequence so that we can use indexing and slicing we can also have \u0026quot;Manoj last name is 'kumar' \u0026quot; we can do the opposite 'Manoj last name is \u0026quot;kumar\u0026quot;' we can display it using print statement eg : print \u0026quot;Manoj\u0026quot; we can ask for new line symbol as \\n like that we can have different characters such as \\t   python 2 vs python 3\n  In v2 print is a statement In v3 print is a method print() in python 2 we can use print() by importing  from __future__ import print_function String Methods  length of a string\n len(\u0026ldquo;Manoj kumar\u0026rdquo;) it also counts spaces in the sequence  we can refer to each element in a sequence by index\n \u0026quot;Manoj Kumar\u0026quot;[0] gives M  Slicing\n slicing grabs everything upto the specified point syntax is colon : Manoj Kumar[1:] means take the string and grab everything from index : 1 onwards Grab everything upto 3rd index = \u0026quot;Manoj Kumar\u0026quot;[:3] , here upto 3rd index means not including 3rd index grab everything \u0026quot;Manoj Kumar\u0026quot;[:] = we can go backwards also - we have to give negative syntax so in \u0026quot;Manoj Kumar\u0026quot; if M is 0 index , then -1 index would be r , i.e 1 from backwards Grab everything but last letter = \u0026quot;Manoj Kumar\u0026quot;[:-1] or \u0026quot;Manoj Kumar\u0026quot;[:10]  we can use index and slicing by grabbing specified element using a step size - default step size in 1\n Grab everything and step size is 1 = \u0026quot;Manoj Kumar\u0026quot;[::1] - for using step size you need to use double colons so for grab everything in step size of 2 = \u0026quot;Manoj Kumar[::2]\u0026quot; Grab everything in reverse order = \u0026quot;Manoj Kumar\u0026quot;[::-1] , here -1 means specifying to traverse in reverse order\n so to reverse a string\n  \u0026#34;Manoj Kumar\u0026#34;[::-1]  String Properties Immutability  means once it is created elements in it cant be changed so strings in python are immutable\n a= \u0026quot;Manoj\u0026quot; ; a[1] = \u0026quot;K\u0026quot; Throws an error  We can concatenate strings\n  \u0026#34;Manoj Kumar\u0026#34; + \u0026#34;Tatipamula\u0026#34;  or we can altogether replace the variable\n a= \u0026quot;Manoj\u0026quot; to a=\u0026quot;kumar\u0026quot;  We can use Mutliplication symbol for string\n \u0026quot;M\u0026quot;*10 - it will repeat M 10 times   Bultin methods  object in python has built in methods which we can apply on they are available as functions on objects a= \u0026quot;Manoj\u0026quot;\n Upper Case   a.upper()  Lower Case  a.lower()  split an string into array by an element\na.split(\u0026#34;a\u0026#34;)  this will create an array by splitting based on a and a is not included   "
},
{
	"uri": "/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/",
	"title": "Objects_ds_basics",
	"tags": [],
	"description": "",
	"content": "  Numbers Numbers lot of types of numbers in python like integers : 1 ,3, 2 floating point numbers : 2.1, -1.23 , 4E2 In python 2, it does classic division means decimal points gets truncated off 3/2 = 1 How can we make it do true division , atleast make sure one is floating point number 3.0/2 = 1.5 3/2.0 = 1.\n  Strings You can create by single quotes '' or double quotes \u0026quot;\u0026quot; It treates everything in a sentence as sequence Means \u0026ldquo;Manoj Kumar\u0026rdquo; every letter is a part of a sequence so that we can use indexing and slicing we can also have \u0026quot;Manoj last name is 'kumar' \u0026quot; we can do the opposite 'Manoj last name is \u0026quot;kumar\u0026quot;' we can display it using print statement eg : print \u0026quot;Manoj\u0026quot; we can ask for new line symbol as \\n like that we can have different characters such as \\t python 2 vs python 3\n  Print_format python 2 print statement is used to print the strings - Print a string print \u0026#34;Manoj Kumar\u0026#34; Print a string vaiable along with a string a= \u0026#34;manoj\u0026#34; print \u0026#34;My name is %s\u0026#34; %(a) Print a floating point variable a= 1.233 print \u0026#34;My name is %1.2f\u0026#34; %(a) In 1.2f 2 is how many numbers to show past the decimal if you make 2 as 10 it will fill rest of absent decimals with 0 1 is the total number of minimum digits that string should contain Suppose if you make 1 to 10 it will fill rest of the spaces with whitespaces a= 1.\n  Lists Strings are types of sequence in python lists are more generalised version of sequence lists are constructed with sqaure brackets and each element is seperated with commas my_list = [1,2,3] this is a list of integers lists can hold a different kind of object TypeScript my_list = [1,\u0026#34;string\u0026#34;,3.341] ##Functions just like strings they have a length Length of a list len([1,\u0026#34;string\u0026#34;,3.341]) Indexing and Slicing a = [\u0026#34;one\u0026#34;,1,2,3] a[1] #output 1 a[1:] # take everything from index - 1 a[:3] # take everything upto index - 3 (excluding 3) You can concatenate lists like strings [1,2,3]+[\u0026#34;one\u0026#34;,\u0026#34;two\u0026#34;,\u0026#34;three\u0026#34;] You can repeat the lists using muliplication just like strings ([1,2,3]+[\u0026#34;one\u0026#34;,\u0026#34;two\u0026#34;,\u0026#34;three\u0026#34;])*2 list can grow as long as we want they have no type constraint Methods append [1,2,3].\n  Dictionaries they are mappings in python we can think of it as hash tables or objects in JS in other languages Mappings are collection of objects that are sorted by a key unlike sequence that stores obejcts by relative sequence we can access an element in list by indexing what mapping is doing is its gonna start objects with key mappings are not gonna retain order\n  Tuples they are very similar to lists except they are immutable You can construct a tuple using paranthesis with elements seperated by commas a = (1,2,3) len(a) #3 we can same methods as lists on tuples tuples can have different object types A tuple is a sequence like a sequence a = (1,2,3) len(a) #3 a[-2] # 2 Methods - only 2 methods if we want an index of element a.\n  Files Interacting with external files we will handle .txt files of we want to handle .docx , .xlsx we can open a file using open(\u0026lsquo;path\u0026rsquo;) we can read the file by a.read() a = open(\u0026#39;test.txt)a.read() if you do a read again you will get an empty string , because it read the entire file and put the cursor at the end of file so we have to reset the cursor , to do that we can have a.\n  Sets_booleans sets are the unordered collection of the unique elements you can construct a set using set() it will look like a dictionary with no values but it is not python a = set() a.add(1) a.add(2) a.add(2) # there will be no change we can convert a list with duplicate elements to unique using set() l = [1,1,1,1,1,1,1,3,3,3,3,3,5,5,5,45,5,4] l = set(l) print(l) # will give set(1, 3, 4, 5, 45) in sorted order sets are only concerned with unique elements Booleans they are true or false we can create using comaprision operaters 1\u0026gt;2 we can have None to an object that we dont have to reassign it yet a = None print(a) Comparision operators We have same common comaprison oprators as other languages\n  "
},
{
	"uri": "/doc/health/books/rujuthadiwekar/dont_looose_your_mind_loose_weight/about_vitamins/",
	"title": "vitamins",
	"tags": [],
	"description": "",
	"content": "  All vitamins and minerals play an extremely important role in our body acting as catalysts , co-enzymes(help enzymes) and cofactors(these support chemical and metabolic reactions) of our metaboilc reations\n  they dont provide body with any energy but they are important so that body can use that energy or calories well\n A high intake of processed food , stress and other lifestyle like smoking ,late nights and inactivity are increasing need of vitamins and minerals and reducing the ability to absorb them\n None of them can work in isolation , for calcium to do its work it needs 24 other nutrients to be present in right amount at right time\n for Iron , it requires adequate protein , vitamin B ans C to form heamoglobin(blood)\n  Vitamin A  found in\n whole and low fat milk\n dark leafy vegetables\n all orange , yello vegetables\n liver and kidney\n Forms of vitamin A found in plant sources are called carotene\n   We need it because it supports our immune functions , helps improve eye sight , crucial for growth and development in the body\n  Carotene is a potent antioxiadnt which protects cells against free radicals   Take it when you are stressed or travelling\n  Why you get too much tires after crash diet , too much exercise or a period of stress is due to deficiency of vitamin A\n So if your lifestyle is stressed most of the time you need more vitamin A\n Best way is to increase carotene content\n Best time to take vitamin A is after a stressful period of day ,after a big workout or a long flight\n Carotenes are also a good way of combating acne , help prevent cancer , maintain healthy reproductive system and reduce vaginal infections\n  Vitamin B  There are many vitamins clubbed together\n thiamin (B1) riboflavin (B2) niacin (B3) pantothenic acid (B5) pyridoxine (B6) folic acid (B9) cobalamin (B12)  all make up what we call vitamin B or vitamin B Complex\n Found in\n Fresh fruits vegetables, whole grains nuts eggs fish cheese  B12 is mostly found in non veg sources\n So vegans have to take extra care to include this vitamin in their diet\n Curd and cheese have a good level of B12 created from fermentation process from milk(this fermentation process increases B12 amounts)\n We need it because\n It takes part in metabolic reactions helps metabolise carbohyfrates aids digestion improves nerve functions and prevents depression  Take it as supplement at the start of your day with your breakfast so that you can utilize nutrients throughout the day\n PMS and bad moods can be prevented with a good supply of vitamin D just before periods\n Vitamin B counteracts Chinese restaurants syndrome (symptoms are mild headaches bloating and sometimes nausea) which we get by eating MSG , found increasingly in processed foods\n For lusturous hair and pink nails look B for help\n  Vitamin C  Found in\n most frutis and vegetables most animals can make their own vitamin c but human body cannot good news is there is a plenty of vitamin c in the most of food we eat Vitamin B and C are water soluble , that means they are are gone when the water is deledted from our body So our body needs a fresh supply daily vitamin C can be easily lost something as simple as cutting fruits and vegetables we loose it more when we keep them covered in refrigirator so anything that increases the exposure of fruits and vegetables can lead to almost 90% loss of vitamin C  We need it because\n it is critical to our immunity helps manufactures hormones , collagen maintains our respiratory system ,lungs and a powerful antioxidant Also plays a main role in protecting us against heart disease , has a supporting function of vitamin E protects sperms from damage  Take it as a regular supplement\n It is vital if you are a smoker(both active and passive) , have a hectic social life and are dealing with a lot of stress\n  Vitamin D  Found in our body, we syntesize it upon exposing to sunlight To get this you need to get the daily dose of sun best time is aroung sunrise(sun not harmul to skin at this time) we can also get this from fish adn egg yolks plants are not a good souce of this vitamin green leafy vegetables is best We need it because of calcium absorption Deficiency causes\n bowing of legs curving of spine loass of bone density joint pain and discomfort  It is also has carcenigic properties escpicially breast and colon cancer , they are most common when sunlight is not adequate\n  Vitamin E  Found in polyunsaturated vegetable oils like\n soy sunflower safflower oil and seeds nuts whole grains  Processed foods drastiaclly reduce vitamin E content\n when you make maida out od whole wheat or pulp your vegetables like you do for pav bhaji , there is almost no vitamin left in them\n Good Sources\n Aspargus green leafy vegetables berries tomatoes  we need it because\n protects the heart keeps skin young prevents nerve and muscular weakness  powerful oxidant\n when to eat\n when you eat a lot of fried food , bakery products and consumed high amounts of fat  Fats get broken down and damaged in our body by a process called oxidation\n vitamin E prevents fat from turning into toxic\n so if you consume bhujiya or pakoras , dont forget your E.g.\n Vitamin E is required when\n working out sun exposure viral infections diabetes   Vitamin K  Found in\n Green leafy vegetables green Peas green tea oats whole grain  It is very neglected vitamin cause vitamin K defeciencies are very rare\n we need it because\n plays a major role in blood clotting , which is why it\u0026rsquo;s a life saving vitamin recent studies shown that it is important in preventing ans treating osteoporiosis and for builing healthy bones , so any important vitamin for women who are more vulnerable to this disease  Take it if you are suffering from excessive menstural bleeding(is often a sign od low vitamin k levels)\n Any vitamin supplement should give you more than enough\n  Fiber  prevents constipation regulalrize Digestion prevents overeating zero on calories and adds bulk to food Foods with fibre take longer to chew thus our eating time increases the brain registers that it is full only after 20 minutes This goves the body a chance to know that stomach is full and reduces the chance of overeating As the fibre moves in our intestine it picks up the wastes and adds bulk to your stools it makes going to toilet a pleasurable experience it will reduce the time spent on downloading Its clear that fibre is important if\n we want clear stomach glowing complexions lean bodies good fitness levels  Dont add fibre to atta ,sabzi and butter milk or buy fibre addded foods\n This will only come in the way of absorbing minerals like calcium and iron\n Instead eat in processed foods\n Foods naturally rich in fiber\n brown rice whole wheat barley jawaar bajra chole legumes nuts  Cut down on biscuits ,white bread , burger ,pizza , maida\n avoid overcooking vegetables and sabzis and killing fruits and vegetables in juicer\n  "
},
{
	"uri": "/doc/technical/languages/javascript/tutorials/",
	"title": "Tutorials",
	"tags": [],
	"description": "",
	"content": "  "
},
{
	"uri": "/doc/technical/languages/angular/tutorials/",
	"title": "Tutorials",
	"tags": [],
	"description": "",
	"content": "  "
},
{
	"uri": "/doc/technical/languages/nodejs/tutorials/",
	"title": "Tutorials",
	"tags": [],
	"description": "",
	"content": "  "
},
{
	"uri": "/doc/technical/languages/nodejs/",
	"title": "Node JS",
	"tags": [],
	"description": "",
	"content": "  Books   Tutorials   "
},
{
	"uri": "/doc/technical/languages/mongo/",
	"title": "Mongo DB",
	"tags": [],
	"description": "",
	"content": "  "
},
{
	"uri": "/doc/health/fitness/",
	"title": "Ftiness",
	"tags": [],
	"description": "",
	"content": "  "
},
{
	"uri": "/doc/health/",
	"title": "Health",
	"tags": [],
	"description": "",
	"content": " Here you can find about Health  Books   Ftiness   General   "
},
{
	"uri": "/doc/technical/languages/",
	"title": "Languages",
	"tags": [],
	"description": "",
	"content": "  Javascript   Node JS   Mongo DB   Angular   Python   "
},
{
	"uri": "/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/statements/",
	"title": "Statements",
	"tags": [],
	"description": "",
	"content": "  Other languages  if(a\u0026gt;b){ a = 2 b = 4 }   In python  if a\u0026gt;b : a = 2 b = 4  pyhton gets rid of () and {} and incorporates two things one colon(:) and a whitespace\n colon is used to end a statement and white space is ued to indent what happens in case of that statement has to be exceuted\n In other languages we use semicolons(;) to end a statement but python does not have semicolons instead it uses end of line as a end of statement\n beacuse readability is given more importance\n  if condition  notice here instead elseif there is elif  one_condition = 2\u0026lt;3 if one_condition : print(\u0026#34;1\u0026#34;) elif 5\u0026gt;2 : print(\u0026#34;2\u0026#34;) else : print(\u0026#39;else\u0026#39;) for loop  A for loop acts as an iterator in python , it goes through the items that are in a sequence or any other iterable item eg : strings, lists, tuples, dictionaries  for item in object : do_stuff  for item in [1,2,3,4,5] : print item+1 Modulo  we use it to get remainder  a = 10%3  We can print even and odd numbers using for loop  for item in [1,2,3,4,5,6,7]: if item%2 == 0: print(\u0026#39;This is an even number\u0026#39;) elif item%2 ==1 : print(\u0026#39;This is a odd number\u0026#39;) else : print(\u0026#34;This is neither even nor odd\u0026#34;)  we can find the sum of elements in list , tuples  sum = 0 for item in [1,2,3,4,5] : sum+= item print(sum) Unpacking tuples l = [(2,3),(4,3),(5,6)] for (t1,t2) in l: print(t1)  For above to work items have to uniform we can access the items inside of it using tuple unpacking Beacuse a lot of objects delivers iterables through tuples  Applying to Dictionary l = {\u0026#34;k1\u0026#34;:1,\u0026#34;k2\u0026#34; :2 ,\u0026#34;k3\u0026#34;:2} for item in l: print l # this will print only keys k2,k2,k1  what if we want to get the values or both the keys and values in Python 2 we can use .iteritems() what it does it basically creates a generator  d = {\u0026#34;k1\u0026#34;:1,\u0026#34;k2\u0026#34; :2 ,\u0026#34;k3\u0026#34;:3} for key,value in d.iteritems(): print(key , \u0026#39;:\u0026#39;, value)  In python 3 we can use .items() which is same as previous method  d = {\u0026#34;k1\u0026#34;:1,\u0026#34;k2\u0026#34; :2 ,\u0026#34;k3\u0026#34;:3} for key,value in d.items(): print(key , \u0026#39;:\u0026#39;, value)  why generators worked in python 2 beacause they are intorcued in earlier years of python basically generators dont store data in memory but yeilds the result as it goes through the itertable items originally python items() built a real list of tuples and returned that , this could potentially take a lot of memory After the generators were introducted to the language this method is reimplemeneted as a iterator generator method called iteritems(), the original remains backward compatible Pyhton changes is that now items() will return iterators and a list is never fully built and now iteritems() is also gone since items() is doing that job  While loop  It is one of the general ways to perform iterration While statement will repeatedly excecute a single statement or a group of statements until the true value occurs  x =0 while x\u0026lt;10: print(\u0026#34;x is\u0026#34; ,x) x +=1 else: print(\u0026#34;Finished !!!\u0026#34;) Break Continue Pass  we can use them to add additional functionality\n break it will break the nearest enclosing loop\n continue will continue executing the closest enclosing loop\n pass does nothing at all\n  # It is like while test : if cond1 : break if cond2 : continue else : print(\u0026#34;Broke out\u0026#34;)  pass is like a null statement means nothing happiness difference betwwen a comment and pass is that comment is entirely ignored but the pass is not by the interpreter suppose if you want a for loop but dont want o implement it yest you can use pass statement , same goes with methods and class\nRange It will return a list of numbers\n we can find the type of object using type()\na = range(0,10) # will give numbers from 0 to 9 # beacuse end is not included just like slicing # if we want give only one arg b = range(10) # will give numbers from 0 to 9 # we can also specify step size c = range(0,10,2) # will give in intervals of 2 type(a) # will give a list In python 2 range() will return a list of numbers which includes storing them in memory\n what if we want a billion numbers\n we cannot do that with range , it will create problems\n so solution is xrange() which will return an generator\n genrator allows the genration of the objects and are provided at that instance , but it doesnt store every instance generated into memory\n that means genrate a billion numbers and provide them at that instance and toss them away\n so xrange() is a generator for numbers\n if you do type(range(4)) will show list , but for type(xrange(4)) ill show xrange\n In python 3 there is no need for xrange() because range() is already a generator\n  List comprehesions  it allows us to build lists with different syntax , means using for loop Suppose if we want use for loop for constructing lists in traditional way  l = [] for item in \u0026#34;manoj\u0026#34;: l.append(item)  which is a tedious way By list compreshension method we can use  list = [item for item in \u0026#34;manoj\u0026#34;]  this means take the item from iteratble and fill the list with it examples build a list of sqaures for 10 numbers  squares = [item**2 for item in range(1,11)] # we can even nest them new_squares = [item**2 for item in (item**2 for item in range(1,10))]  Convert celsius to fahrenheit  formula fah = cel(9/5) + 32  celsius = [10,20,40,50] fah = [(temp)*(9/5.0) + 32 for temp in celsius]"
},
{
	"uri": "/doc/health/books/rujuthadiwekar/dont_looose_your_mind_loose_weight/about_minerals/",
	"title": "minerals",
	"tags": [],
	"description": "",
	"content": " Calcium  Found in  dairy products tofu green leafy vegetables nuts seeds almost all wholesome food (oranic grown foods)  We need it because  it maintains health of bones , joints and twentieth is responsible for all muscualr contractions clotting of blood and to regulate blood pressure  Take it as supplement daily Bone is a dynamic living tissue in the body  being broken down and rebuilt every day even in adults  calicium is essential for maintaining good bone health on daily basis A diet that is high in processed foods , caffeine , alcohol, sugar and sodium reduces calcium absorption , So does regulat intakes of antacids and laxatives this mineral we need to supplement through ou diet If you are using a calcium supplement check what compound it uses  A calcium citrate or lactate(soluble in form) compound is absorbed much better by the human body than the popular calcium carbonate or phosphate supplements  Use a supplement od 1000 milligrams a day for optimum health  Iron  Found In  Meat Fish Eggs (All non veg sources) Veg Sources garden cress seeds(traditionally used to make laddoos for pregnent and nursing women) bajra jowar whole grains fresh vegetables and fruits  For Iron to be absorbed effectively , we need adequate amounts of vitamin C and B(expecially B12) in our body We need it because  it is a part of heamoglobin which transports oxygen from lungs to different tissues of the body and carbondioxide from different tissues of the body to lungs  Dont take iron supplements Just like in case of calcium , processed foods , caffeine , anti depressants, sodium ,sugar (includinf desserts , mithai and chocolates that we eat because of PMS) reduce the absorption of iron in the body the best strategy to improve iron intake is not to take iron supplememts , but instead crate an environment in the body which will encourage iron absorption. Reduce your intake od seets and caffeine and increase Vitamin B and C ,in addition to drinking adequate amounts of water Deficiency od iron is common especially in women During menstural periods women loose blood (good blood \u0026amp; not impurities ,unlike what we believed earlier) and with it we lose important minerals like iron , copper , magenesium etc.  Selenium , zinc , chromium , mangnesium , managanese , copper  Found in  Fish eggs whole grains fresh veggies  they are essential to preventing diseases , also they are antioxidants they promote fat burning in our body Insulin insensitivity is an common reason for gaining fat and is rampant in urban india and in the western these minerals have provided to be efficient in improving insulin sensitivity  Zinc and Chromium  they are paramount importance for good skin and hair growth and to prevent acne and wrinkles Zinc also plays a role in normal testosterone function and aiding muscle growth  Selenium Copper  For protection against free radicals , selenium is vital Copper is required for optimum iron absorptions Manganese is responsible for thyroid functions and blood sugar control Magnesium helps lower blood pressure ,eases PMS symptoms and lowers LDL levels\n There are many minerals like\n boron molybdnum iodine potassium inositol chlorine most of them are still undiscovered   "
},
{
	"uri": "/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/print_format/",
	"title": "Print_format",
	"tags": [],
	"description": "",
	"content": " python 2  print statement is used to print the strings - Print a string\nprint \u0026#34;Manoj Kumar\u0026#34;  Print a string vaiable along with a string  a= \u0026#34;manoj\u0026#34; print \u0026#34;My name is %s\u0026#34; %(a)  Print a floating point variable  a= 1.233 print \u0026#34;My name is %1.2f\u0026#34; %(a)  In 1.2f 2 is how many numbers to show past the decimal if you make 2 as 10 it will fill rest of absent decimals with 0 1 is the total number of minimum digits that string should contain Suppose if you make 1 to 10 it will fill rest of the spaces with whitespaces  a= 1.233 print \u0026#34;My name is %20.2f\u0026#34; %(a)  Conversion format methods will convet any python object to string  print \u0026#34;Convert to string %s\u0026#34; %(123)  another formatting option we can use is %r  print \u0026#34;Convert to string %r\u0026#34; %(123)  they do the same thing but to achieve the result they use different functions %s uses str() and %r uses repr()\n If you wanted to put more than one variable in string\n  print \u0026#34;First %sSecond %sThird %s\u0026#34; %(\u0026#34;Hi\u0026#34;,\u0026#34;Manoj\u0026#34;,3)  Above- order of variables matters Best way is string.format  print \u0026#34;First {x} Second {y} Third {x}\u0026#34;.format(x=\u0026#34;inserted\u0026#34;,y=\u0026#34;manoj\u0026#34;)  here order doesnt matter\n In python 3\n  print (\u0026#34;First {x} Second {y} Third {x}\u0026#34;.format(x=\u0026#34;inserted\u0026#34;,y=\u0026#34;manoj\u0026#34;))"
},
{
	"uri": "/doc/general/",
	"title": "General",
	"tags": [],
	"description": "",
	"content": " Here you can find about General Stuff  "
},
{
	"uri": "/doc/health/general/",
	"title": "General",
	"tags": [],
	"description": "",
	"content": "  "
},
{
	"uri": "/doc/technical/web-domain/",
	"title": "Web-Domain",
	"tags": [],
	"description": "",
	"content": "  "
},
{
	"uri": "/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/functions_methods/",
	"title": "Functions",
	"tags": [],
	"description": "",
	"content": "  Methods are fucntions built into objects  Functions  Useful device that groups together a set of statements so that they can be run more than once they also let us specify input parameters that can serve as inputs to functions Function allows us not repeat the code again and again def is a keyword to tell python we are about to create a function Naming rules are same as naming rules of variable  def add(): \u0026#34;\u0026#34;\u0026#34; This is a muliline coment \u0026#34;\u0026#34;\u0026#34; return \u0026#34;manoj\u0026#34;  so this multi line comment acts as a docstring when you run help on the method , that means it serves as a documention for function Write a function which tells whether the number is prime or not  def isPrime(num): for item in range(2,num): if num%item ==0: print \u0026#34;Not a Prime\u0026#34; break else : print \u0026#34;Prime\u0026#34;  Better method  import math def is_prime(num): \u0026#39;\u0026#39;\u0026#39; Better method of checking for primes. \u0026#39;\u0026#39;\u0026#39; if num % 2 == 0 and num \u0026gt; 2: return False for i in range(3, int(math.sqrt(num)) + 1, 2): if num % i == 0: return False return True Lambda Expressions  lambda expressions allows us to do anonymous functions lambda body is single one line expressions Instead of expilictly returning we can write the expression lamda is less general than def Why we use lambda we can squeeze design to limit nesting lambda is designed for coding simple functions def handles larger tasks they are like arrow fucntions in JS  add = lambda a,b: a+b There are four reasons that I can think of.\nFirst Lambda is confusing because: the requirement that a lambda can take only a single expression raises the question: What is an expression?\nA lot of people would like to know the answer to that one. If you Google around a bit, you will see a lot of posts from people asking “In Python, what’s the difference between an expression and a statement?”\nOne good answer is that an expression returns (or evaluates to) a value, whereas a statement does not. Unfortunately, the situation is muddled by the fact that in Python an expression can also be a statement. And we can always throw a red herring into the mix — assigment statements like a = b = 0 suggest that Python supports chained assignments, and that assignment statements return values. (They do not. Python isn’t C.)[2]\nIn many cases when people ask this question, what they really want to know is: What kind of things can I, and can I not, put into a lambda? And the answer to that question is basically—\nIf it doesn’t return a value, it isn’t an expression and can’t be put into a lambda. If you can imagine it in an assignment statement, on the right-hand side of the equals sign, it is an expression and can be put into a lambda. Using these rules means that:\nAssignment statements cannot be used in lambda. In Python, assignment statements don’t return anything, not even None (null). Simple things such as mathematical operations, string operations, list comprehensions, etc. are OK in a lambda. Function calls are expressions. It is OK to put a function call in a lambda, and to pass arguments to that function. Doing this wraps the function call (arguments and all) inside a new, anonymous function. In Python 3, print became a function, so in Python 3+, print(…) can be used in a lambda. Even functions that return None, like the print function in Python 3, can be used in a lambda. Conditional expressions, which were introduced in Python 2.5, are expressions (and not merely a different syntax for an if/else statement). They return a value, and can be used in a lambda. 1 2 lambda: a if some_condition() else b lambda x: ‘big’ if x \u0026gt; 100 else ‘small’\nSecond Lambda is confusing because: the specification that a lambda can take only a single expression raises the question: Why? Why only one expression? Why not multiple expressions? Why not statements?\nFor some developers, this question means simply Why is the Python lambda syntax so weird? For others, especially those with a Lisp background, the question means Why is Python’s lambda so crippled? Why isn’t it as powerful as Lisp’s lambda?\nThe answer is complicated, and it involves the “pythonicity” of Python’s syntax. Lambda was a relatively late addition to Python. By the time that it was added, Python syntax had become well established. Under the circumstances, the syntax for lambda had to be shoe-horned into the established Python syntax in a “pythonic” way. And that placed certain limitations on the kinds of things that could be done in lambdas. Frankly, I still think the syntax for lambda looks a little weird. Be that as it may, Guido has explained why lambda’s syntax is not going to change. Python will not become Lisp\nThird Lambda is confusing because: lambda is usually described as a tool for creating functions, but a lambda specification does not contain a return statement.\nThe return statement is, in a sense, implicit in a lambda. Since a lambda specification must contain only a single expression, and that expression must return a value, an anonymous function created by lambda implicitly returns the value returned by the expression. This makes perfect sense. Still— the lack of an explicit return statement is, I think, part of what makes it hard to grok lambda, or at least, hard to grok it quickly.\nFourth Lambda is confusing because: tutorials on lambda typically introduce lambda as a tool for creating anonymous functions, when in fact the most common use of lambda is for creating anonymous procedures.\nBack in the High Old Times, we recognized two different kinds of subroutines: procedures and functions. Procedures were for doing stuff, and did not return anything. Functions were for calculating and returning values. The difference between functions and procedures was even built into some programming languages. In Pascal, for instance, procedure and function were different keywords.\nIn most modern languages, the difference between procedures and functions is no longer enshrined in the language syntax. A Python function, for instance, can act like a procedure, a function, or both. The (not altogether desirable) result is that a Python function is always referred to as a “function”, even when it is essentially acting as a procedure.\nAlthough the distinction between a procedure and a function has essentially vanished as a language construct, we still often use it when thinking about how a program works. For example, when I’m reading the source code of a program and see some function F, I try to figure out what F does. And I often can categorize it as a procedure or a function — “the purpose of F is to do so-and-so” I will say to myself, or “the purpose of F is to calculate and return such-and-such”.\nSo now I think we can see why many explanations of lambda are confusing.\nFirst of all, the Python language itself masks the distinction between a function and a procedure.\nSecond, most tutorials introduce lambda as a tool for creating anonymous functions, things whose primary purpose is to calculate and return a result. The very first example that you see in most tutorials (this one included) shows how to write a lambda to return, say, the square root of x.\nBut this is not the way that lambda is most commonly used, and is not what most programmers are looking for when they Google “python lambda tutorial”. The most common use for lambda is to create anonymous procedures for use in GUI callbacks. In those use cases, we don’t care about what the lambda returns, we care about what it does.\nThis explains why most explanations of lambda are confusing for the typical Python programmer. He’s trying to learn how to write code for some GUI framework: Tkinter, say, or wxPython. He runs across examples that use lambda, and wants to understand what he’s seeing. He Googles for “python lambda tutorial”. And he finds tutorials that start with examples that are entirely inappropriate for his purposes.\nSo, if you are such a programmer — this tutorial is for you. I hope it helps. I’m sorry that we got to this point at the end of the tutorial, rather than at the beginning. Let’s hope that someday, someone will write a lambda tutorial that, instead of beginning this way\nLambda is a tool for building anonymous functions.\nbegins something like this\nLambda is a tool for building callback handlers.\n"
},
{
	"uri": "/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/lists/",
	"title": "Lists",
	"tags": [],
	"description": "",
	"content": "  Strings are types of sequence in python lists are more generalised version of sequence lists are constructed with sqaure brackets and each element is seperated with commas  my_list = [1,2,3]  this is a list of integers lists can hold a different kind of object TypeScript  my_list = [1,\u0026#34;string\u0026#34;,3.341] ##Functions\n just like strings they have a length Length of a list  len([1,\u0026#34;string\u0026#34;,3.341])  Indexing and Slicing a = [\u0026#34;one\u0026#34;,1,2,3] a[1] #output 1 a[1:] # take everything from index - 1 a[:3] # take everything upto index - 3 (excluding 3)  You can concatenate lists like strings  [1,2,3]+[\u0026#34;one\u0026#34;,\u0026#34;two\u0026#34;,\u0026#34;three\u0026#34;]  You can repeat the lists using muliplication just like strings  ([1,2,3]+[\u0026#34;one\u0026#34;,\u0026#34;two\u0026#34;,\u0026#34;three\u0026#34;])*2  list can grow as long as we want they have no type constraint  Methods  append  [1,2,3].append(\u0026#34;append_me\u0026#34;) # this wont work a = [1,2,3] a.append(\u0026#34;append\u0026#34;) # this works  pop  [1,2,3].pop() # this will work a = [1,2,3,4,5,6,7,8] a.pop() # this works ## we can also pop a specific index by default it is -1 a.pop(1)  after popping there will be no element in the list sort  [1,2,3].reverse() # will not work print([1,2,3].reverse()) # will not work gives output as None a = [2,3,4] a.reverse() print(a) # this will permanently reverses the array unlike slicing which returns the sliced elements We can have lists inside a lists  we can form a matrix by having lists inside a list and it can do ery nested  l1 = [1,2,3] l2 = [4,5,6] l3 = [7,8,9] l = [l1,l2,l3] print(l) # this is a matrix # we can get elements like inside_element = l[0][2]  python has advanced feature called list comprehension and it allows for quick construction of lists - basically deconstructing for loop within brackets  l1 = [1,2,3] l2 = [4,5,6] l3 = [7,8,9] l = [l1,l2,l3] c = [row[0] for row in l] print(c) # [1,4,7]  this basicall means for every element in final list , grab the zeroth inde of that element  "
},
{
	"uri": "/doc/technical/languages/angular/",
	"title": "Angular",
	"tags": [],
	"description": "",
	"content": "  Books   Tutorials   "
},
{
	"uri": "/doc/technical/tools/",
	"title": "Tools",
	"tags": [],
	"description": "",
	"content": "  Git   "
},
{
	"uri": "/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/scope/",
	"title": "Scope",
	"tags": [],
	"description": "",
	"content": "  How python deals with variable names when create a variable in python the variable name is stored in namespace variable names also have a scope This scope of a variable name decides the visibility of the variable to the other parts of code  x = 50 def dummy(): x =25 return x print x # will print 50 print dummy # will print 25  so we have two different x so how does python know what x to refer to in each statement this is where scope comes(rules)  Rules  Name Assignments will create or change local names by default Name references search at most 4 scopes\n local enclosing global builtin   LEGB  checking will be from top to bottom in the below list\n (L : Local) : names assigned in a way within a fucntion(def or lambda) and not declared global in that function eg : In above rg x in dummy()\n (E : Enclosing Function Locals ) : Name in local of any and all enclosing functions(def or lambda) from inner to outer\n (G : Global) : Names assigned at the top level of a module file , or declared global in a def within a file\n (B :Built in) : names assigned in built in modules eg : range, open , print etc\n  f = lambda x: x**2 # Here x is local to lambda function name = \u0026#34;global name\u0026#34; def Manoj(): x = 20 # here x is local def one(): name = \u0026#34;manoj\u0026#34; def two(): print \u0026#39;Hello\u0026#39; + name two() # here name checks in enclosing def function same as closuer in JSs # output is Hello manoj one() print name # this will refer to global name len(\u0026#34;manoj\u0026#34;) # here len refers to builtin local varibales  when you decalre a variable name in a function it does not pollute the global function or enclosing functions - so even if we have same variable name in outside function our local var doesnot change that\n so all varibales have block scope , i.e their scope starts from the declaration of them to end of their current scope means if done inside a function it ends with function definition\n  x = 50 def one(x): print x # here x is 50 x = 25 print x # here x is 25 one(x) print x # here x is 50 unchanged  suppose if you want to work on the global variable inside a function\n you have to use global keyword - means we are telling python that treat this variable as global and change accrodingly\n  x = 50 def one(): global x print x # here x is 50 x = 25 print x # here x is 25 one() print x # here x is 25 changed  we can use globals() and locals() to check what are your global and local variables are\n Everything in python is an object\n we can assign variables to fucntions just like numbers\n  "
},
{
	"uri": "/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/dictionaries/",
	"title": "Dictionaries",
	"tags": [],
	"description": "",
	"content": "  they are mappings in python we can think of it as hash tables or objects in JS in other languages\n Mappings are collection of objects that are sorted by a key unlike sequence that stores obejcts by relative sequence\n we can access an element in list by indexing\n what mapping is doing is its gonna start objects with key\n mappings are not gonna retain order\n Dictionary consists if a key and a value\n value can be any python object\n  my_dict = {\u0026#39;key1\u0026#39;: \u0026#39;value\u0026#39;,\u0026#39;key2\u0026#39; : \u0026#39;value2\u0026#39;} Accessing my_dict = {\u0026#39;key1\u0026#39;: \u0026#39;value\u0026#39;,\u0026#39;key2\u0026#39; : \u0026#39;value2\u0026#39;} my_dict[\u0026#34;key1\u0026#34;] #outputs value  based on value whih we access from the key we can have differnt methods on them  a = {\u0026#39;name\u0026#39; : \u0026#34;manoj\u0026#34;, \u0026#34;age\u0026#34;:20} a[\u0026#39;name\u0026#39;][::-1] #for reversing a[\u0026#34;age\u0026#34;]-20 #subtract but it doesnot actually change the dictionary a[\u0026#34;age\u0026#34;] += 40 # changes  we can create empty dictionary and create objects from it  a = {} a[\u0026#34;name\u0026#34;] = \u0026#34;manoj\u0026#34; a[\u0026#34;age\u0026#34;] = 24 print(a) # {name : \u0026#34;manoj\u0026#34;, age:24} Nesting a = {} a[\u0026#34;name\u0026#34;] = \u0026#34;manoj\u0026#34; a[\u0026#34;age\u0026#34;] = 24 c = {\u0026#39;key\u0026#39; : {\u0026#39;nestedkey\u0026#39;: a}} # for getting age print c[\u0026#34;key\u0026#34;][\u0026#34;nestedkey\u0026#34;][\u0026#34;name\u0026#34;].upper() Methods a = {\u0026#34;k1\u0026#34; : \u0026#34;one\u0026#34;,\u0026#34;k2\u0026#34; : \u0026#34;two\u0026#34; , \u0026#34;k3\u0026#34; : \u0026#34;three\u0026#34;}  For getting keys a.keys() For getting values a.values() they are out order beacuse they are mappings If you want a combiation of both a.items  this will return a list something called tuples   a = {\u0026#34;k1\u0026#34; : \u0026#34;one\u0026#34;,\u0026#34;k2\u0026#34; : \u0026#34;two\u0026#34; , \u0026#34;k3\u0026#34; : \u0026#34;three\u0026#34;} a.keys() # [\u0026#34;k1\u0026#34;,\u0026#34;k2\u0026#34;,\u0026#34;k3\u0026#34;] a.values() #[\u0026#34;two\u0026#34;, \u0026#34;three\u0026#34; ,\u0026#34;one\u0026#34;] a.items() # [(\u0026#39;k3\u0026#39;, \u0026#39;three\u0026#39;), (\u0026#39;k2\u0026#39;, \u0026#39;two\u0026#39;), (\u0026#39;k1\u0026#39;, \u0026#39;one\u0026#39;)]  We can nest any way we want just like JavaScript Objects  "
},
{
	"uri": "/doc/technical/languages/python/",
	"title": "Python",
	"tags": [],
	"description": "",
	"content": "  Tutorials   "
},
{
	"uri": "/doc/technical/general/",
	"title": "General",
	"tags": [],
	"description": "",
	"content": "  Hugo   .\n"
},
{
	"uri": "/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/oops/",
	"title": "Oops",
	"tags": [],
	"description": "",
	"content": "  list is an object (everything is an object in python) we can have methods on list  l = [1,2,3] l.count() #3  we can use type() to check the typeof object  l = [1,2,3] a = 2 b = \u0026#34;manoj\u0026#34; tup = (1,2,3) d = {\u0026#34;k1\u0026#34;:1} lamb = lambda x: x**2 def func(): pass type(a) # int type(b) # str type(tup) # tuple type(d) # dict type(l) # list type(lamb) # function means object of type function type(func) # function  how can we create our own object types thats why we use class keyword  class  we can own object types using class keyword class is like blueprint that defines nature of the objects created with it from this classes we can construct instances an instance is a specific object created for a particular class\n eg : for list\n  l = [1,2,3]  l is an instance of the class list  Creating a class  by convention class names are captialized for first letter  class Manoj(object): pass x = Manoj() type(x) # __main__.Manoj  We can define attributes and methods inside a class attributes is the characteristic of an object eg : color of a car method is the action we can perform on an object eg : start is a method on car\n syntax for attribute\n  self.name_of_attribute = \u0026#34;manoj\u0026#34;  there is a special method called __int__() which is used to instantiate or initialize the attributes of an object every single method in a class is going to have self word in it  class Car(object): def __init__(self, model): self.model = model xuv = Car(model = \u0026#39;xuv\u0026#39;)  we gave class keyword , name of the class and gave object as argument\n then we start constructing methods\n as soon as you instantiate an object __int__() is called\n so __int__() should be your first method in a class just like constructor in other languages\n each method in the class definition begins the refernece to instance object , means you always start with self reference\n it doesnt have to be self keyword , we can use this also like JS , but always use this as the first parameter of every method\n  class Car(object): def __init__(this, model): this.model = model xuv = Car(model = \u0026#39;xuv\u0026#39;)  when you dont give any arguments while creating object it will throw error saying 1 argument is missing , that means by default a reference to the object is passed as first argument always In python there is also a class object attribute and they are same for any instance of the class  class Car(object): # class object attribute owner = \u0026#39;manoj\u0026#39; def __init__(this, model,secondHand=False): this.model = model xuv = Car(model = \u0026#39;xuv\u0026#39;)  now we are not doing self.owner so python treats it as class level attributes here no matter what object we make from Car class owner will be manoj We can give object specific atributes inside a init method In python boolean is True instead of true in other languages same goes whith False We can also have default parameters same as JavaScript  Methods  they are used to perform operations with the attributes of our objects Methos are used in Encapsulation concept of OOPS Encapsulation : Allows you to divide responsibilities in programming and allows you to handle large apps we can think of Methods as functions acting on objects  class Circle(object): #class object attributes shape = \u0026#39;round\u0026#39; pi = 3.14 def __init__(self, radius=1): self.radius = radius self.perimeter = 2 * Circle.pi * self.radius def area (self): return Circle.pi*(self.radius**2) def set_radius(self, new_radius=1): \u0026#34;\u0026#34;\u0026#34; this will takes new radius and resets current radius \u0026#34;\u0026#34;\u0026#34; self.radius = new_radius c1 = Circle(radius = 2) print c1.pi # same as original print \u0026#34;c1 radius = {x}\u0026#34;.format(x=c1.radius) print \u0026#34;c1 area = {x}\u0026#34;.format(x = c1.area()) c2 = Circle(radius = 4) print c2.pi # same as original print \u0026#34;c2 radius = {x}\u0026#34;.format(x=c2.radius) print \u0026#34;c2 area = {x}\u0026#34;.format(x = c2.area()) c1.set_radius(100) print \u0026#34;c1 new radius = {x}\u0026#34;.format(x=c1.radius) print \u0026#34;c1 new area = {x}\u0026#34;.format(x = c1.area()) Inheritance  It is a form of creating new classed using the classes which are already defined Newly formed classes are called derived classes parents are called base classes uses of inheritance is you can resuse the code and avoid duplication  class Animal(object): def __init__(self): print \u0026#34;Animal Created\u0026#34; def whoAmI(self): print \u0026#34;Animal\u0026#34; def eat(self): print \u0026#34;Animal will eat\u0026#34; class Dog(Animal): def __init__(self): Animal.__init__(self) print \u0026#34;Dog Created\u0026#34; def whoAmI(self): print \u0026#34;Iam dog\u0026#34; def bark(self): print \u0026#34;Woof !!!\u0026#34; d = Dog() d.whoAmI() #overided parent method d.eat() # inherited parent method d.bark() # has its own method  In above code if we want to inherit the Animal Class object in Dog class object we have to pass Animal refernce in Dog class as argument instead of object so that it will inherit all the attributes and methods of parent like usinf extends keyword in other languages In the special method __int__ we need to call instantiate the Animal by calling Animal.__init__(self) which means inherit animal only for dog , notice here we are passing dog self as refernce , this is same as calling super() in other languages  Special Methods  classes in python can implemnt certain operations with special method names these methods are not actaully called directly but by python specific language syntax\n when we make a list\n when we print list , python knows what to do with it\n when do len(list) pyhton knows what to do with it\n so python has some special methods on objects\n  class Book(object): def __init__(self,author,pages): self.author = author self.pages = pages print \u0026#34;Book has been created\u0026#34; b = Book(\u0026#34;manoj\u0026#34;,10) print b # \u0026lt;__main__.Book object at 0x7f0648abd950\u0026gt;  when we print a book we will get some confusing info saying where it is located in memory what if we want to know the contents of object we have some special methods -__str__ for printing  __len__ for the length , but we can do whatever we want to output __del__ which will delete that object instance from memory   class Book(object): def __init__(self,author,pages): self.author = author self.pages = pages print \u0026#34;Book has been created\u0026#34; def __str__(self): return \u0026#34;Author : {x} , pages: {y}\u0026#34;.format(x=self.author,y=self.pages) def __len__(self): return self.pages def __del__(self): print \u0026#34;Book is deleted\u0026#34; b = Book(\u0026#34;manoj\u0026#34;,10) print b # Author : Manoj pages: 10 len(b) # 10 del(b) # Book is deleted"
},
{
	"uri": "/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/tuples/",
	"title": "Tuples",
	"tags": [],
	"description": "",
	"content": "  they are very similar to lists except they are immutable\n You can construct a tuple using paranthesis with elements seperated by commas\n  a = (1,2,3) len(a) #3  we can same methods as lists on tuples tuples can have different object types A tuple is a sequence like a sequence  a = (1,2,3) len(a) #3 a[-2] # 2 Methods - only 2 methods  if we want an index of element a.index() If you want the frequency of an element use a.count\n the main advantage of tuples is we cannot mute it that means change it\na = (1,1,2,5,4) a.index(4) #4 a.count(1) #2 a[0] = \u0026#34;manoj\u0026#34; #error will come b = [1,2,3] b[1] = \u0026#34;manoj\u0026#34; # will work coz they are mutable when we will use it\n if you want to not to change the order and we cannot edit them\n  "
},
{
	"uri": "/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/exception_handling/",
	"title": "Exception_handling",
	"tags": [],
	"description": "",
	"content": " For eg : syntax errors it is a specfic description of types of error Even statement is syntactically correct , while exceuting it may cause error just like try catch in other languages here our syntax is try , except , finally  try : do something except Exception1 : exceute this except Exception2 : exceute this else : if there is no exception exceute this finally : exceute afte reverything is done   Built In Exceptions  try: a = open(\u0026#34;test1.txt\u0026#34;) except: print \u0026#34;hey file not there\u0026#34; else : print \u0026#34;Hey no error occured\u0026#34; finally : print \u0026#34;i am finally\u0026#34;try: 2+\u0026#34;s\u0026#34; except TypeError: print \u0026#34;hey type error\u0026#34; else : print \u0026#34;Hey no error occured\u0026#34; finally : print \u0026#34;i am finally\u0026#34;def askInt(): try: val = int(raw_input(\u0026#34;Please enter an integer\u0026#34;)) except : print \u0026#34;hey you didnot entered integer\u0026#34; try: k = int(raw_input(\u0026#34;try again\u0026#34;)) except : try : k = int(raw_input(\u0026#34;last try\u0026#34;)) except : print \u0026#34;Maximum reached\u0026#34; else : print \u0026#34;Hey no error occured\u0026#34; finally : print \u0026#34;i am finally\u0026#34; askInt()  improve this method  def askInt(): while True: try : val = int(raw_input(\u0026#34;Please enter an integer\u0026#34;)) except : print(\u0026#34;Oops !! you didnot enter proper\u0026#34;) continue else : print \u0026#34;No error occured\u0026#34; break finally : print \u0026#34;This is finally\u0026#34;"
},
{
	"uri": "/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/files/",
	"title": "Files",
	"tags": [],
	"description": "",
	"content": " Interacting with external files we will handle .txt files of we want to handle .docx , .xlsx\n we can open a file using open(\u0026lsquo;path\u0026rsquo;)\n we can read the file by a.read()\na = open(\u0026#39;test.txt)a.read() if you do a read again you will get an empty string , because it read the entire file and put the cursor at the end of file\n so we have to reset the cursor , to do that we can have a.seek(cursorindex)\n we can read the lines of the file by a.readlines() , which will give list of element based on new line i.e splitting a string based on new line\n we have magic function in jupyte for writing files\n  %%writefile new.txt First Line Second line   Suppose if we want to iterate through lines we can use for loop  a = open(\u0026#39;test.txt\u0026#39;) a.read() a.seek(0) # places the position at 0 index a.readlines() from __future__ import print_function for line in open(\u0026#39;test.txt\u0026#39;): print(line)  readlines() is good for small files but you have a 1 GB text file it is not good because it will store the entire list returned by the readlines() so use read() instead  "
},
{
	"uri": "/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/modules/",
	"title": "Modules",
	"tags": [],
	"description": "",
	"content": " if we want to import a module  import module_name   import math math.sqrt(4)  all math related functionalities are in math module  from math import sqrt # instead of importing everything import only specific sqrt(4)  all import statements should be top of your code what if we want to download exteral module anaconda already did that for us if we still want  conda install *module name*conda install flask  what if anaconda doesnot have that package we can use pip python management sysytem which allows us to install packages from Internet  "
},
{
	"uri": "/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/objects_ds_basics/sets_booleans/",
	"title": "Sets_booleans",
	"tags": [],
	"description": "",
	"content": "  sets are the unordered collection of the unique elements you can construct a set using set() it will look like a dictionary with no values but it is not python a = set() a.add(1) a.add(2) a.add(2) # there will be no change  we can convert a list with duplicate elements to unique using set()  l = [1,1,1,1,1,1,1,3,3,3,3,3,5,5,5,45,5,4] l = set(l) print(l) # will give set(1, 3, 4, 5, 45) in sorted order  sets are only concerned with unique elements  Booleans  they are true or false we can create using comaprision operaters 1\u0026gt;2 we can have None to an object that we dont have to reassign it yet  a = None print(a) Comparision operators We have same common comaprison oprators as other languages\n2\u0026lt;3 2\u0026lt;=3 2\u0026gt;=3 2\u0026gt;3 2==2 4!=3 2\u0026lt;\u0026gt;3 #this is same as != Chained COmparisions  we have muliple comparision check in single line we can also have two opreators and , or  1 \u0026lt; 2 \u0026lt; 3 # means 1\u0026lt;2 and 2\u0026lt;3 (1\u0026lt;2) and (2\u0026lt;3) 1\u0026lt;3\u0026gt;2 # means 1\u0026lt;3 and 3\u0026gt;2 1==2 or 2\u0026gt;1"
},
{
	"uri": "/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/bulitin_functions/",
	"title": "Bulitin_functions",
	"tags": [],
	"description": "",
	"content": " Map  it takes two arguments  function sequence  map will run the given function against each element in sequence  def convertTemp(temp): return ((temp)*9/5.0) + 32 l = [10,20,30] map(convertTemp,l)  this is just like map in JS\n we can pass lambda expressions also\n  map(lambda x: x*(9/5.0)+32),[10,20,30,40])a = [1,2,3] b = [4,5,6] c = [7,8,9] map(lambda x,y: x+y,a,b)  the main thing is it will take 0th index in a and 0th index of b and apply lambda function and again it will take 1st index of a and 1st index of b and aply lambda function\n we can increase the number of parameters and input an extra array\n  a = [1,2,3] b = [4,5,6] c = [7,8,9] map(lambda x,y,z :x+y+z,a,b,c) Reduce  it is useful in conjuction with lamda expression it will also take two parameters  function sequence  and it applies the function continuously to the each element in sequence  If seq = [ s1, s2, s3, \u0026hellip; , sn ], calling reduce(function, sequence) works like this:\n At first the first two elements of seq will be applied to function, i.e. func(s1,s2) The list on which reduce() works looks now like this: [ function(s1, s2), s3, \u0026hellip; , sn ] In the next step the function will be applied on the previous result and the third element of the list, i.e. function(function(s1, s2),s3) The list looks like this now: [ function(function(s1, s2),s3), \u0026hellip; , sn ] It continues like this until just one element is left and return this element as the result of reduce()  For eg : [47,11,42,13]\nl = [47,11,42,13] reduce(lambda x,y: x+y,l)  Suppose if you want to find the greatest number in a list  l = [1,10,4,3] reduce(lambda a,b: a if a\u0026gt;b else b, l) Filter  it takes  function sequence  same as map and reduce the function needs to return a boolean value the function needs to be applied to the each element of sequence if for the iteration the fucntion returns true then only that element will be included in result  l = [1,2,3,45,6,12,14,13,47] filter(lambda x: True if x%2 == 0 else False, l) Zip  zip makes an iterator that aggregates the elements from each iterables\n suppose you have 2 lists\n  l1 = [1,2,3] l2 = [4,5,6] zip(l1,l1) #[(1,4),(2,5),(3,6)]  the above will create a list of tuples\n suppose if we want the highest of two for each index in the lists\n  x =[13123,223424,3534567,4123,624,2347,5468] y = [1123,52456,513135,6512,536] for pair in zip(z,y) print max(pair) map(lambda pair : max(pair),zip(x,y)) # will create a list [13123, 223424, 3534567, 6512, 624]  why only 5 were created beacuse priority will be given to the smaller list  d1 = {\u0026#39;a\u0026#39; : 1 , \u0026#39;b\u0026#39;:2} d2 = {\u0026#39;c\u0026#39;: 3, \u0026#39;d\u0026#39;:4} zip(d1,d2) # [(\u0026#39;a\u0026#39;, \u0026#39;c\u0026#39;), (\u0026#39;b\u0026#39;, \u0026#39;d\u0026#39;)]  where the values gone ?? beacuse iterating through the dictionaries will only give you the keys what if we want key values both - iteritems()  d1 = {\u0026#39;a\u0026#39; : 1 , \u0026#39;b\u0026#39;:2} d2 = {\u0026#39;c\u0026#39;: 3, \u0026#39;d\u0026#39;:4} zip(d1.iteritems(),d2.iteritems()) # [((\u0026#39;a\u0026#39;, 1), (\u0026#39;c\u0026#39;, 3)), ((\u0026#39;b\u0026#39;, 2), (\u0026#39;d\u0026#39;, 4))]  suppose if you want only values you can use itervalues() in python 2 and values() in pyhton 3  d1 = {\u0026#39;a\u0026#39; : 1 , \u0026#39;b\u0026#39;:2} d2 = {\u0026#39;c\u0026#39;: 3, \u0026#39;d\u0026#39;:4} zip(d1.itervalues(),d2.itervalues()  suppose if you want to switch the values in 1st dictionary to second values  d1 = {\u0026#39;a\u0026#39; : 1 , \u0026#39;b\u0026#39;:2} d2 = {\u0026#39;c\u0026#39;: 3, \u0026#39;d\u0026#39;:4} def switch_values(d1,d2): for d1_key,d2_value in zip(d1,d2.itervalues()): d1[d1_key] = d2_value print d1  if one iterable is shorter than other shoter will be given preference and result will be of that length  Enumerate  extremely useful function it allows you to keep a count while iterating through object  l = [\u0026#34;a\u0026#34;,\u0026#34;b\u0026#34;,\u0026#34;c\u0026#34;] count = 0 for item in l: print item print count count+=1  the above is not necessary enumerate returns a tuple  for (count , item ) in enumerate(l): print (count,item) for (count, item) in enumerate(l): if count\u0026gt;=2: break else : print item all() and any()  they allow us to conviniently check for boolean matching in an interable\n all () - will return true if all the elements in the iterable are true\n any () - will return true if atleast one element is true\n our own implementation\n  def all(iterable): for item in iterable: if not element: False return True def any(iterable): for item in iterable: if element : return True else Falsel= [True,False,True] all(l) # False any(l) # True complex()  will return a complex number with real and imaginary part (a+ib) it ca take string or number to to form complex number\n suppose if the first paramater is a string , then you dont call it second parameter\n the second parameter can never be a string Each argument may be a numberic type(inlcuding complex) and if you dont give imaginary it will default to zero which will act as numeric conversion like int or float   ```python complex(2,3) #2+3j complex(\u0026lsquo;2+3j\u0026rsquo;) # 2+3j\n"
},
{
	"uri": "/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/decorators/",
	"title": "Decorators",
	"tags": [],
	"description": "",
	"content": "  decorators can be thought as functions which modify the functionality of a function  we can get globals and locals anywhere by calling globals() and locals() those objects will comes as dictionary we can get the keys of them by globals().keys()   print globals().keys()def func(): print locals() # {} beacuse there are no locals return 1 print func() #1  in python each fuction will have its sperate namespace means scope  def hello(name = \u0026#34;manoj\u0026#34;): print \u0026#39;Hello \u0026#39; + name hello() # Hello manoj # since everything is an object in python we can assign funtions to variables greet = hello greet() # Hello manoj del hello # what if i delete hello now  # will hello work ? no # will greet work ? yes beacuse greet is not attached to hello greet() # Hello manoj Function within functions  we can return functions too  def hello(name = \u0026#34;manoj\u0026#34;): print \u0026#34;hello function is executed\u0026#34; def greet(): return \u0026#34;\\tthis is inside greet\u0026#34; def welcome(): return \u0026#34;\\tthis is inside welcome\u0026#34; print greet() print welcome() print \u0026#34;Control back to hello\u0026#34;  here welcome and greet are not available outside in global  def hello(name = \u0026#34;manoj\u0026#34;): print \u0026#34;hello function is executed\u0026#34; def greet(): return \u0026#34;\\tthis is inside greet\u0026#34; def welcome(): return \u0026#34;\\tthis is inside welcome\u0026#34; if name === \u0026#34;manoj\u0026#34;: return greet else : return welcome x = hello() print x # now x is pointing to greet function inside hello functions now  Functions as arguments def hello() return \u0026#34;Hi Manoj\u0026#34; def other(func): print \u0026#34;other is called\u0026#34; print func() other(hello)  so we can pass functions as object and use them with in other functions  Decorators def new_decorator(func): def wrap(): print \u0026#34;Before exceuting func\u0026#34; func() print \u0026#34;after exceuting func\u0026#34; return wrap def func_needs_decorator(): print \u0026#34;this function needs a decorator\u0026#34; func_needs_decorator() ## prints func_needs_decorator = new_decorator(func_needs_decorator) # prints  # before excetuning # this function needs a decorator # after exceting function  So we changed the behaiviour of function decorator wrapped the normal function and modified its behaviour\n we can rewirte it using @ decorator symbol\n  def new_decorator(func): def wrap(): print \u0026#34;Before exceuting func\u0026#34; func() print \u0026#34;after exceuting func\u0026#34; return wrap @new_decorator # this line instead of func_needs_decorator = new_decorator(func_needs_decorator) def func_needs_decorator(): print \u0026#34;this function needs a decorator\u0026#34;"
},
{
	"uri": "/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/iterators_generators/",
	"title": "Iterators_generators",
	"tags": [],
	"description": "",
	"content": "  generator function allows us to write a function that can send back the value and then later resume to pickup where it left off this type of function in python is a generator allowing us to generate a sequence of values over time main difference in syntax will be the use of yield statement generator functin will look like an normal function but the main difference is when a generator function is compiled they become the object that support an iteration protocol that means when they are called in your code they dont actually return a value and exit generator functions will automatically suspend and resume excecution and state around the last point of value generation the main advantage is instead of having to compute an entire series of values upfront , generator functions can be suspended, this is called state suspension  Why use generators  they useful for calculating large sets of results(particularly that involve calculations in the loops themselves) , where we dont want to allocate the memory yfor all the results at the same time\n many standard library functions in python 2 that return lists for example range are modified to generators in python 3\n  About generators stack overflow\nAbout yield stack overflow\ndef gen_cubes(num): for item in range(num) yield num **3 # magic keyword for making function generator gen_cubes(3) #0,1,8  normal function implementation  def gen_cubes(num): out = [] for item in range(num) out.append(item**3) return out # if you give a very big num you will run into memory problems as entire list needs to be stored inside memory gen_cubes(3) #0,1,8  generate a fibanocci sequence  def gen_fib(n): a=1 b=1 for item in range(n): yield a t =a a=b b =t+a for item in gen_fib(10): print item  we can rewrite this using tuple unpacking  def gen_fib(n): a=1 b=1 for item in range(n): yield a a,b = b,b+a for item in gen_fib(10): print item  if we want to create in normal way  def fibon(n): a=1 b=1 out = [] for item in range(n): out.append(a) a,b = b,a+b return out for item in fibon(1): print item  if we call with large number we would have to hold that entire list in memory , we have to keep track of all the elements but with generators we only have to keep track of current item  Next function  allows us to acess next element in the sequence  def simple_gen(): for x in range(3): yield x g= simple_gen() print next(g) #1 print next(g) # 2  after yeilding all the values we have a stop iteration error why do we dont get this error when we use for loop because for loop automatically catches this error and stops calling  iter function  strings are iterables\n we can interate through a string but it doesnot mean that it is a iterator\n we can check this with next() - will give error\n string object supports iteration but we cannot direclty iterate over it as we could with generator function\n unless we use iter()\n  s = \u0026#34;hello\u0026#34; s_iter = iter(s) # now we can call next next(s_iter) # gives \u0026#39;h\u0026#39; will go on till it yeilds all and gives error"
},
{
	"uri": "/doc/technical/languages/python/tutorials/bootcamp_zero_to_hero/collection_module/",
	"title": "Collection_module",
	"tags": [],
	"description": "",
	"content": " Counters  counter is actually a dictionary sub class which allows us to count hashable objects  from collections import Counter l = [1,2,2,1,3,4,5,5,3,3,45,6,7,1,2] Counter(l) #Counter({1: 3, 2: 3, 3: 3, 4: 1, 5: 2, 6: 1, 7: 1, 45: 1})  so the call to Counter method will count how many times each element exists so it returns a dictionary we can also count in a string  from collections import Counter s = \u0026#34;sssddjsjdhsjdhasjdhajsaasaasjdakfsijfhjkehfjkh\u0026#34; Counter(s)  Count how many times each word shows up in a sentence  from collections import Counter s = \u0026#34;How may times the word show up up manoj manoj\u0026#34; k = s.split() out = Counter(k) # Counter({\u0026#39;How\u0026#39;: 1, \u0026#39;manoj\u0026#39;: 2, \u0026#39;may\u0026#39;: 1, \u0026#39;show\u0026#39;: 1, \u0026#39;the\u0026#39;: 1, \u0026#39;times\u0026#39;: 1, \u0026#39;up\u0026#39;: 2, \u0026#39;word\u0026#39;: 1})  # we can have different methods on out out.most_common() # will return a list of tuples # [(\u0026#39;up\u0026#39;, 2), (\u0026#39;manoj\u0026#39;, 2), (\u0026#39;word\u0026#39;, 1), (\u0026#39;show\u0026#39;, 1), (\u0026#39;may\u0026#39;, 1), (\u0026#39;times\u0026#39;, 1), (\u0026#39;How\u0026#39;, 1), (\u0026#39;the\u0026#39;, 1)]  # we can ask for show 3 most common words out.most_common(3) # we can also get the sum of total words sum(out.values()) # we can reset the all the counts by calling clear() on counter object out.clear() # we can call list() to get list of unique elements list(out) # we can convert it to a set by calling set() set(out) # we can convert into a dictionary dict(out) # we can call items() to a list of (elem,count) pairs out.items() # we can have a invert of out.items() means convert from a list of (e,cnt) pairs to dict and call a counter on it Counter(dict(out.pairs())) # we can have least common elements with string indexing syntax in negative out.most_common()[:-n-1:-1] # will give n leasta common elements # remove zero and negative counts out =+ Counter(s) "
},
{
	"uri": "/doc/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/doc/",
	"title": "Learn Website Manoj",
	"tags": [],
	"description": "",
	"content": " Welcome to my Notes Website Here you can find all kind of notes prepared by me  Technical - Realted to techincal stuff Health - Realted to Health General - Realted to genral stuff  "
},
{
	"uri": "/doc/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]